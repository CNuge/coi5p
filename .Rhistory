})
out_df = flatten_coi5p(coi_output)
out_df = flatten_coi5p(coi_output, keep_cols = c("name", "raw", "stop_codons"))
out_df
coi_output
example_barcode_data$sequence
coi5p_pipe
?coi5p_pipe
example_barcode_data
coi_output = lapply(1:length(example_barcode_data$sequence), function(i){
coi5p_pipe(example_barcode_data$sequence[[i]], name = example_barcode_data$id[[i]])
})
out_df = flatten_coi5p(coi_output)
out_df = flatten_coi5p(coi_output, keep_cols = c("name", "raw", "stop_codons"))
out_df
out_df = flatten_coi5p(coi_output)
out_df = flatten_coi5p(coi_output, keep_cols = c("name", "raw", "stop_codons"))
out_df
out_df = flatten_coi5p(coi_output)
out_df = flatten_coi5p(coi_output, keep_cols = c("", "raw", "stop_codons"))
expect_equal(out_df$stop_codons, c(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE))
expect_equal(out_df$raw, tolower(example_barcode_data$sequence))
coi_output = lapply(example_barcode_data$sequence, function(x){
coi5p_pipe(x)
})
out_df = flatten_coi5p(coi_output)
out_df = flatten_coi5p(coi_output, keep_cols = c("", "raw", "stop_codons"))
out_df = flatten_coi5p(coi_output, keep_cols = c( "raw", "stop_codons"))
expect_equal(out_df$stop_codons, c(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE))
example_barcode_data
out_df$name== example_barcode_data$id
out_df = flatten_coi5p(coi_output)
out_df = flatten_coi5p(coi_output, keep_cols = c("name", "raw", "stop_codons"))
coi_output = lapply(1:length(example_barcode_data$sequence), function(i){
coi5p_pipe(example_barcode_data$sequence[[i]], name = example_barcode_data$id[[i]])
})
out_df = flatten_coi5p(coi_output)
out_df = flatten_coi5p(coi_output, keep_cols = c("name", "raw", "stop_codons"))
out_df$name== example_barcode_data$id
dat = coi5p_pipe(sequence, name = seqname)
dat
x = "coi5p barcode sequence: test_seq1
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta
framed sequence:
---ctttacctgatttttggtgcat...agacccaatcctttatcaacattta
Amino acid sequence:
-LYLIFGAWAG?VGTALSLLIRAEL...LTDRNLNTTFFDPAGGGDPILYQHL
The sequence likely does not contain an insertion or deletion.
Stop codon present: FALSE, Amino acid PHMM score:-198.41257"
x
#baseline obj
seqname = "test_seq1"
sequence = 'ctttacctgatttttggtgcatgagcaggtatagttggaacagccctaagtctcctaattcgagctgaacttgggcaacctggatcacttttaggagatgatcagatttataatgtaatcgtaaccgcccacgcttttgtaataatctttttcatggttataccaattataattggtggtttcggaaattgattagttcctttaataattggagcgccagatatagccttcccacgaataaataacataagtttctgacttcttccaccatcatttcttcttctcctcgcctctgctggagtagaagctggagcaggtactggttgaacagtttatcctccattagctagcaatctagcacatgctggaccatctgttgatttagctattttttctcttcacttagccggtgtttcatcaattttagcttcaattaattttatcacaaccattattaatataaaaccaccagctatttcccaatatcaaacaccattatttgtttgatctattcttgtaaccactattcttcttctcctctcacttccagttcttgcagcaggaattacaatattacttacagatcgtaaccttaatactacattctttgaccctgcaggtggaggagacccaatcctttatcaacattta'
dat = coi5p_pipe(sequence, name = seqname)
dat = coi5p_pipe(
#obj with name
dat = coi5p_pipe(sequence, name = seqname)
"coi5p barcode sequence: test_seq1
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta
framed sequence:
---ctttacctgatttttggtgcat...agacccaatcctttatcaacattta
Amino acid sequence:
-LYLIFGAWAG?VGTALSLLIRAEL...LTDRNLNTTFFDPAGGGDPILYQHL
The sequence likely does not contain an insertion or deletion.
Stop codon present: FALSE, Amino acid PHMM score:-198.41257"
#object after each stage
dat = coi5p(sequence, name = seqname)
dat = frame(dat)
expect_equal(, )
dat = translate(dat)
expect_equal(, )
dat = indel_check(dat)
expect_equal(, TRUE)
dat = translate(dat, trans_table = 5)
expect_equal( , )
dat = indel_check(dat)
})
dat = coi5p(sequence, name = seqname)
dat
dat = coi5p(sequence)
dat
dat == "coi5p barcode sequence
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta"
print(dat) == "coi5p barcode sequence
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta"
print(dat)
dstr1 = print(dat)
expected1 = "coi5p barcode sequence
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta"
dstr1 ==    expected1
dstr1
dstr1 = print(dat)
dstr1
print(dat)
print(dat) == expected1
dstr1 = capture.output(dat)
dstr1
dstr1 = capture.output(print(dat))
dstr1
cat(capture.output(dat),sep = "")
dstr1 = cat(capture.output(dat),sep = "\n")
dstr1 == expected1
dstr1
dstr1 = cat(capture.output(dat),sep = "\n")
dstr1
cat(capture.output(dat),sep = "\n") == expected1
dstr1 = invisible(cat(capture.output(dat),sep = "\n"))
dstr1
cat(capture.output(dat),sep = "\n")
dat
dstr1 = cat(capture.output(dat),sep = "\n")
capture_output(dat)
library(testthat)
dstr1 = capture_output(dat)
dstr1
dat
dstr1 = capture_output(dat, print=TRUE)
dstr1
dstr1 == expected1
dat = coi5p_pipe(sequence, name = seqname)
dat
#object after each stage
dat = coi5p(sequence, name = seqname)
dat
#object after each stage
dat = coi5p(sequence, name = seqname)
expected3
expected3 = "coi5p barcode sequence: test_seq1
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta"
expected3
dat
dstr3 == expected3
dstr3 = capture_output(dat, print=TRUE)
dstr3 = capture_output(dat, print=TRUE)
dstr3 == expected3
expected5 = "coi5p barcode sequence: test_seq1
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta
framed sequence:
---ctttacctgatttttggtgcat...agacccaatcctttatcaacattta
Amino acid sequence:
-LYLIFGAWAG?VGTALSLLIRAEL...LTDRNLNTTFFDPAGGGDPILYQHL"
dat = translate(dat)
dat = frame(dat)
dstr4 = capture_output(dat, print=TRUE)
dstr4
dat = translate(dat)
expected5 = "coi5p barcode sequence: test_seq1
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta
framed sequence:
---ctttacctgatttttggtgcat...agacccaatcctttatcaacattta
Amino acid sequence:
-LYLIFGAWAG?VGTALSLLIRAEL...LTDRNLNTTFFDPAGGGDPILYQHL"
dstr5 = capture_output(dat, print=TRUE)
dstr5 == expected5
dat = indel_check(dat)
expected6 = "coi5p barcode sequence: test_seq1
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta
framed sequence:
---ctttacctgatttttggtgcat...agacccaatcctttatcaacattta
Amino acid sequence:
-LYLIFGAWAG?VGTALSLLIRAEL...LTDRNLNTTFFDPAGGGDPILYQHL
The sequence likely does not contain an insertion or deletion.
Stop codon present: FALSE, Amino acid PHMM score:-198.41257"
dstr6 = capture_output(dat, print=TRUE)
dstr6 == expected6
"Unallowed character in DNA string: F\n Valid characters are: a t g c - n"
coi5p("ATGCATFA")
library(coi5p)
sequence2 = 'ctttatttaatttttggtgcatgagcaggaatagttggaacggctttaagtcttctaatccgagctgaactaggaccaacctgggtctctcctagggggatgatcaaatttataatgtaattgtaaccgcccatgcttttgtaataattttctttatagtaatacctgtcataattggtggttttggaaattaactaattccattaataattggtgcacctgacatagccttcccacgaataaataacataagctcctgacttcttccaccatcatttctccttctcctcgcctccgctggggttgaagccggagcaggtaccggttgaacagtttaccccccactggcaagcaaccttgctcatgccggaccatctgttgatttagctatcttctccctccatttagctggtatttcatcaattttagcctcaatccaacttcatcacaactattattaatataaaacccccagccatttctcaatatcaaacaccactatttgtttgatctatccttgtaactactattcttctcctcctttccctcccagttcttgcagcaggaattacaatcttacttacagaccgcaaccttaatactacattctttgatcctgcaggtggaggagacccaatcctttaccaacaccta'
dat = coi5p_pipe(sequence2)
dat
dstr7 = capture_output(dat, print=TRUE)
library(coi5p)
?censored_translation
library(devtools)
devtools::document()
library(coi5p)
?coi5``
?coi5p
#' Determine the translation table to use for a given phylogenetic group.
#'
#' Recommends which translation table to use if taxonomic data is avaliable.
#' The reccomendations are based on the translation tables reported for different
#' taxonomic classifications on the barcode of life database
#' (http://www.boldsystems.org/index.php).
#'
#' @param x a taxonomic designation (allowed ranks: family, order, class, phylum).
#' @return an integer indicating the correct translation table.
#' @examples
#' which_trans_table("Chordata") #phylum
#' which_trans_table("Actinopterygii") #class
#' which_trans_table("Akentrogonida")  #order
#' which_trans_table("Hydrobiidae") #family
#' @details
#' If which_trans_table is unable to identify a translation table to utilize,
#' more information on translation tables can be found here: https://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi
#' @export
which_trans_table = function(x) {
use_tab = trans_df$trans_table[trans_df$phylogeny == tolower(x)]
if(length(use_tab) == 0){
return(0)
}
return(use_tab)
}
load('r/sysdata.rda')
load('R/sysdata.rda')
View(trans_df)
View(trans_df)
which_trans_table("diptera")
write_tsv(trans_df,'trans_df.tsv')
library(tidyverse)
write_tsv(trans_df,'trans_df.tsv')
trans_df = read_tsv('trans_df.tsv')
?as.data.frame
trans_df = as.data.frame(trans_df)
View(trans_df)
View(trans_df)
trans_df = as.data.frame(trans_df, stringsAsFactors=FALSE)
which_trans_table("diptera")
use_data(nt_PHMM , aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
library(devtools)
use_data(nt_PHMM , aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
which_trans_table("diptera")
which_trans_table("lepidoptera")
which_trans_table("xenacoelomorpha")
example_nt_string
x = coi5p_pipe(example_nt_string)
x = coi_pipe(example_nt_string)
library(coi5p)
?coi5p_pipe
dat = coi5p_pipe(example_nt_string , trans_table = 5)
x
example_nt_string
ex2 = "actctactatgatttttggtgcatgagcaggaatagttggaatagctttaagtttactaattcgcgctgaactaggtcaacccggatctcttttaggggatgatcagatttataatgtgatcgtaaccgcccatgcctttgtaataatcttttttatggttatacctgtaataattggtggctttggcaattgacttgttcctttaataattggtgcaccagatatagcattccctcgaataaataatataagtttctggcttcttcctccttcgttcttacttctcctggcctccgcaggagtagaagctggagcaggaaccggatgaactgtatatcctcctttagcaggtaatttagcacatgctggcccctctgttgatttagccatcttttcccttcatttggccggtatctcatcaattttagcctctattaattttattacaactattattaatataaaacccccaactatttctcaatatcaaacaccattatttgtttgatctattcttatcaccactgttcttctactccttgctctccctgttcttgcagccggaattacaatattattaacagaccgcaacctcaacactacattctttgaccccgcagggggaggggacccaattctctatcaacactta"
dat = coi5p_pipe(ex2 , trans_table = 5)
dat
dat2 = coi5p_pipe(ex2 , trans_table = 5)
dat = coi5p_pipe(example_nt_string , trans_table = 5)
dat
dat2
library(coi5p)
sequence = 'ctttacctgatttttggtgcatgagcaggtatagttggaacagccctaagtctcctaattcgagctgaacttgggcaacctggatcacttttaggagatgatcagatttataatgtaatcgtaaccgcccacgcttttgtaataatctttttcatggttataccaattataattggtggtttcggaaattgattagttcctttaataattggagcgccagatatagccttcccacgaataaataacataagtttctgacttcttccaccatcatttcttcttctcctcgcctctgctggagtagaagctggagcaggtactggttgaacagtttatcctccattagctagcaatctagcacatgctggaccatctgttgatttagctattttttctcttcacttagccggtgtttcatcaattttagcttcaattaattttatcacaaccattattaatataaaaccaccagctatttcccaatatcaaacaccattatttgtttgatctattcttgtaaccactattcttcttctcctctcacttccagttcttgcagcaggaattacaatattacttacagatcgtaaccttaatactacattctttgaccctgcaggtggaggagacccaatcctttatcaacattta'
sequence_framed = '---ctttacctgatttttggtgcatgagcaggtatagttggaacagccctaagtctcctaattcgagctgaacttgggcaacctggatcacttttaggagatgatcagatttataatgtaatcgtaaccgcccacgcttttgtaataatctttttcatggttataccaattataattggtggtttcggaaattgattagttcctttaataattggagcgccagatatagccttcccacgaataaataacataagtttctgacttcttccaccatcatttcttcttctcctcgcctctgctggagtagaagctggagcaggtactggttgaacagtttatcctccattagctagcaatctagcacatgctggaccatctgttgatttagctattttttctcttcacttagccggtgtttcatcaattttagcttcaattaattttatcacaaccattattaatataaaaccaccagctatttcccaatatcaaacaccattatttgtttgatctattcttgtaaccactattcttcttctcctctcacttccagttcttgcagcaggaattacaatattacttacagatcgtaaccttaatactacattctttgaccctgcaggtggaggagacccaatcctttatcaacattta'
seqname = 'test_seq1'
sequence_AAcensored = "-LYLIFGAWAG?VGTALSLLIRAELGQPGSLLGDDQIYNVIVTAHAFV?IFFMV?PI?IGGFGNWLVPL?IGAPD?AFPR?NN?SFWLLPPSFLLLLASAGVEAGAGTGWTVYPPLASNLAHAGPSVDLAIFSLHLAGVSSILASINFITTIIN??PPAISQYQTPLFVWSILVTTILLLLSLPVLAAGIT?LLTDRNLNTTFFDPAGGGDPILYQHL"
sequence_AA5 ="-LYLIFGAWAGMVGTALSLLIRAELGQPGSLLGDDQIYNVIVTAHAFVMIFFMVMPIMIGGFGNWLVPLMIGAPDMAFPRMNNMSFWLLPPSFLLLLASAGVEAGAGTGWTVYPPLASNLAHAGPSVDLAIFSLHLAGVSSILASINFITTIINMKPPAISQYQTPLFVWSILVTTILLLLSLPVLAAGITMLLTDRNLNTTFFDPAGGGDPILYQHL"
dat = coi5p(sequence, name = seqname)
expect_equal(dat$raw, sequence)
dat = frame(dat)
x= dat
library(coi5p)
sequence = 'accctttacttaatctttggtgcatgagcaggaatagtaggtacagcccttagcttgcttattcgagcagaattaagccaacctggcacactcctgggagacgatcagatctacaatgttatcgtaactgctcacgcttttgtaataattttttttatggttatacctgtaataattggtgggttcggaaactgattagtgcctttaataattggtgcaccggacatagctttcccacgaataaataacataagcttttgactgctacccccctccctcctattacttttggcctctgctggagttgaagccggagccggaactggttgaacagtttatccccccctcgcaagtaatatagcccacgctggggcatcagtagacttagctattttctcgctccatttagcggtatttcctcaattcttgcctctatcaactttattacaaccattattaatataaaaccgcctgccatctctcaatatcaaacacccctttttgtttgatctattcttgtaaccacagtcctactcctcctttcacttcctgttcttgcagccgcaattacaatactacttaccgaccgtaatttaaacacaacattttttgatcctgctggtgggggtgacccaattctttaccaacattta'
sequence_framed = 'accctttacttaatctttggtgcatgagcaggaatagtaggtacagcccttagcttgcttattcgagcagaattaagccaacctggcacactcctgggagacgatcagatctacaatgttatcgtaactgctcacgcttttgtaataattttttttatggttatacctgtaataattggtgggttcggaaactgattagtgcctttaataattggtgcaccggacatagctttcccacgaataaataacataagcttttgactgctacccccctccctcctattacttttggcctctgctggagttgaagccggagccggaactggttgaacagtttatccccccctcgcaagtaatatagcccacgctggggcatcagtagacttagctattttctcgctccatttagcggtatttcctcaattcttgcctctatcaactttattacaaccattattaatataaaaccgcctgccatctctcaatatcaaacacccctttttgtttgatctattcttgtaaccacagtcctactcctcctttcacttcctgttcttgcagccgcaattacaatactacttaccgaccgtaatttaaacacaacattttttgatcctgctggtgggggtgacccaattctttaccaacattta'
sequence_AAcensored = "TLYLIFGAWAG?VGTALSLLIRAELSQPGTLLGDDQIYNVIVTAHAFV?IFFMV?PV?IGGFGNWLVPL?IGAPD?AFPR?NN?SFWLLPPSLLLLLASAGVEAGAGTGWTVYPPLASN?AHAGASVDLAIFSLHLAVFPQFLPLSTLLQPLL??NRLPSLNI?HPFLFDLFL?PQSYSSFHFLFLQPQLQYYLPTVI?TQHFLILLVGVTQFFTNI-"
sequence_AA5 = "TLYLIFGAWAGMVGTALSLLIRAELSQPGTLLGDDQIYNVIVTAHAFVMIFFMVMPVMIGGFGNWLVPLMIGAPDMAFPRMNNMSFWLLPPSLLLLLASAGVEAGAGTGWTVYPPLASNMAHAGASVDLAIFSLHLAVFPQFLPLSTLLQPLLM*NRLPSLNIKHPFLFDLFL*PQSYSSFHFLFLQPQLQYYLPTVI*TQHFLILLVGVTQFFTNI"
dat = coi5p(sequence )
dat = frame(dat)
library(coi5p)
dat = coi5p(sequence )
dat = frame(dat)
dat = translate(dat)
dat = indel_check(dat)
library(coi5p)
library(coi5p)
dat2 = dat
sequence = 'accctttacttaatctttggtgcatgagcaggaatagtaggtacagcccttagcttgcttattcgagcagaattaagccaacctggcacactcctgggagacgatcagatctacaatgttatcgtaactgctcacgcttttgtaataattttttttatggttatacctgtaataattggtgggttcggaaactgattagtgcctttaataattggtgcaccggacatagctttcccacgaataaataacataagcttttgactgctacccccctccctcctattacttttggcctctgctggagttgaagccggagccggaactggttgaacagtttatccccccctcgcaagtaatatagcccacgctggggcatcagtagacttagctattttctcgctccatttagcggtatttcctcaattcttgcctctatcaactttattacaaccattattaatataaaaccgcctgccatctctcaatatcaaacacccctttttgtttgatctattcttgtaaccacagtcctactcctcctttcacttcctgttcttgcagccgcaattacaatactacttaccgaccgtaatttaaacacaacattttttgatcctgctggtgggggtgacccaattctttaccaacattta'
sequence_framed = 'accctttacttaatctttggtgcatgagcaggaatagtaggtacagcccttagcttgcttattcgagcagaattaagccaacctggcacactcctgggagacgatcagatctacaatgttatcgtaactgctcacgcttttgtaataattttttttatggttatacctgtaataattggtgggttcggaaactgattagtgcctttaataattggtgcaccggacatagctttcccacgaataaataacataagcttttgactgctacccccctccctcctattacttttggcctctgctggagttgaagccggagccggaactggttgaacagtttatccccccctcgcaagtaatatagcccacgctggggcatcagtagacttagctattttctcgctccatttagcggtatttcctcaattcttgcctctatcaactttattacaaccattattaatataaaaccgcctgccatctctcaatatcaaacacccctttttgtttgatctattcttgtaaccacagtcctactcctcctttcacttcctgttcttgcagccgcaattacaatactacttaccgaccgtaatttaaacacaacattttttgatcctgctggtgggggtgacccaattctttaccaacattta'
sequence_AAcensored = "TLYLIFGAWAG?VGTALSLLIRAELSQPGTLLGDDQIYNVIVTAHAFV?IFFMV?PV?IGGFGNWLVPL?IGAPD?AFPR?NN?SFWLLPPSLLLLLASAGVEAGAGTGWTVYPPLASN?AHAGASVDLAIFSLHLAVFPQFLPLSTLLQPLL??NRLPSLNI?HPFLFDLFL?PQSYSSFHFLFLQPQLQYYLPTVI?TQHFLILLVGVTQFFTNI-"
sequence_AA5 = "TLYLIFGAWAGMVGTALSLLIRAELSQPGTLLGDDQIYNVIVTAHAFVMIFFMVMPVMIGGFGNWLVPLMIGAPDMAFPRMNNMSFWLLPPSLLLLLASAGVEAGAGTGWTVYPPLASNMAHAGASVDLAIFSLHLAVFPQFLPLSTLLQPLLM*NRLPSLNIKHPFLFDLFL*PQSYSSFHFLFLQPQLQYYLPTVI*TQHFLILLVGVTQFFTNI"
dat = coi5p(sequence )
dat = frame(dat)
dat = translate(dat)
dat = indel_check(dat)
library(coi5p)
object.size(dat)
object.size(dat)
object.size(dat)*1000000
object.size(dat)
load('R/sysdata.rda')
load('R/sysdata.rda')
nt_filename = '/home/cnuge/bin/DAPR/public_only_PHMMs/nt_train_all_bold_coi_v2_1perc_subsample-PublicOnly.PHMM'
new_nt = readPHMM(nt_filename)
library(aphid)
new_nt = readPHMM(nt_filename)
nt_PHMM = new_nt
aa_filename = '/home/cnuge/bin/DAPR/public_only_PHMMs/aa_train_all_bold_coi_v2_1perc_subsample-PublicOnly.PHMM'
new_aa = readPHMM(aa_filename)
aa_PHMM = new_aa
load('R/sysdata.rda')
use_data(nt_PHMM, aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
library(devtools)
use_data(nt_PHMM, aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
library(coi5p)
nt_PHMM = new_nt
aa_PHMM = new_aa
use_data(nt_PHMM, aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
library(coi5p)
#baseline obj
seqname = "test_seq1"
sequence = 'ctttacctgatttttggtgcatgagcaggtatagttggaacagccctaagtctcctaattcgagctgaacttgggcaacctggatcacttttaggagatgatcagatttataatgtaatcgtaaccgcccacgcttttgtaataatctttttcatggttataccaattataattggtggtttcggaaattgattagttcctttaataattggagcgccagatatagccttcccacgaataaataacataagtttctgacttcttccaccatcatttcttcttctcctcgcctctgctggagtagaagctggagcaggtactggttgaacagtttatcctccattagctagcaatctagcacatgctggaccatctgttgatttagctattttttctcttcacttagccggtgtttcatcaattttagcttcaattaattttatcacaaccattattaatataaaaccaccagctatttcccaatatcaaacaccattatttgtttgatctattcttgtaaccactattcttcttctcctctcacttccagttcttgcagcaggaattacaatattacttacagatcgtaaccttaatactacattctttgaccctgcaggtggaggagacccaatcctttatcaacattta'
#sequence 2 contians indel errors
sequence2 = 'ctttatttaatttttggtgcatgagcaggaatagttggaacggctttaagtcttctaatccgagctgaactaggaccaacctgggtctctcctagggggatgatcaaatttataatgtaattgtaaccgcccatgcttttgtaataattttctttatagtaatacctgtcataattggtggttttggaaattaactaattccattaataattggtgcacctgacatagccttcccacgaataaataacataagctcctgacttcttccaccatcatttctccttctcctcgcctccgctggggttgaagccggagcaggtaccggttgaacagtttaccccccactggcaagcaaccttgctcatgccggaccatctgttgatttagctatcttctccctccatttagctggtatttcatcaattttagcctcaatccaacttcatcacaactattattaatataaaacccccagccatttctcaatatcaaacaccactatttgtttgatctatccttgtaactactattcttctcctcctttccctcccagttcttgcagcaggaattacaatcttacttacagaccgcaaccttaatactacattctttgatcctgcaggtggaggagacccaatcctttaccaacaccta'
#######
# print test 1
#######
dat = coi5p(sequence)
expected1 = "coi5p barcode sequence
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta"
dstr1 = capture_output(dat, print=TRUE)
dstr1
dstr1 = capture_output(dat, print=TRUE)
dat
dstr1 == expected1
dstr1 = capture_output(dat, print=TRUE)
dat = coi5p_pipe(sequence, name = seqname)
dstr2
dat
dat = indel_check(dat)
#######
# print test 3
#######
#test object print after each stage
dat = coi5p(sequence, name = seqname)
dat = frame(dat)
dat = translate(dat)
dat
dat = indel_check(dat)
expected6 = "coi5p barcode sequence: test_seq1
raw sequence:
ctttacctgatttttggtgcatgag...agacccaatcctttatcaacattta
framed sequence:
---ctttacctgatttttggtgcat...agacccaatcctttatcaacattta
Amino acid sequence:
-LYLIFGAWAG?VGTALSLLIRAEL...LTDRNLNTTFFDPAGGGDPILYQHL
The sequence likely does not contain an insertion or deletion.
Stop codon present: FALSE, Amino acid PHMM score:-198.41257"
dat
dat = coi5p_pipe(sequence2)
dat
sequence = 'tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttatttg'
sequence_framed = '--------------------------------tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattccttta'
dat = coi5p(sequence )
dat = frame(dat)
dat$framed
sequence_framed
nchar(dat$framed)
nchar(sequence_framed)
translate_codon('ttt')
sequence_3 = 'ggcgctcttctgggggatgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggca'
#trimmed version of this, 81 missing from front, 93 missing from back.
#"ctctatttagtatttggtgcctgagccgggatagtaggcaccgccctgagtctactgattcgggcggaactaagccagccgggcgctcttctgggggatgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggcagcaggcattactatgttacttacagaccgaaatctaaacaccactttctttgacccggcaggcgggggagatccaattttataccaacacctc"
sequence3_framed = '---------------------------------------------------------------------------------------gctcttctgggggatgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggc'
sequence3_AAcensored = '-----------------------------ALLGDDQIYNVIVTAHAFVMIFF?VMPI?IGGFGNWLIPL?IGAPDMAFPR?NN?SFWLLPPSFLLLLSSSGVEAGAGTGWTVYPPLAGNLAHAGASVDLTIFSLHLAGISSILGAINFITTIIN??PPAISQYQTPLFVWAVLVTAVLLLLSLPVL-'
sequence3_AA5 = '-----------------------------ALLGDDQIYNVIVTAHAFVMIFFMVMPIMIGGFGNWLIPLMIGAPDMAFPRMNNMSFWLLPPSFLLLLSSSGVEAGAGTGWTVYPPLAGNLAHAGASVDLTIFSLHLAGISSILGAINFITTIINMKPPAISQYQTPLFVWAVLVTAVLLLLSLPVL'
dat3 = coi5p(sequence_3 )
dat3 = frame(dat3)
dat3$framed
nchar(dat3$framed)
sequence3_framed
nchar(sequence3_framed)
translate_codon('ggc')
dat3$data$ntPath
library(coi5p)
load('R/sysdata.rda')
nt_filename = '/home/cnuge/bin/DAPR/public_only_PHMMs/nt_train_all_bold_coi_v2_5perc_subsample-PublicOnlyV1.PHMM'
library(coi5p)
library(aphid)
new_nt = readPHMM(nt_filename)
new_nt = readPHMM(nt_filename)
aa_filename = '/home/cnuge/bin/DAPR/public_only_PHMMs/aa_train_all_bold_coi_v2_5perc_subsample-PublicOnlyV1.PHMM'
new_aa = readPHMM(aa_filename)
aa_PHMM = new_aa
nt_PHMM = new_nt
use_data(nt_PHMM, aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
library(devtools)
use_data(nt_PHMM, aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
library(coi5p)
seqname = "test_seq1"
sequence = 'ctttacctgatttttggtgcatgagcaggtatagttggaacagccctaagtctcctaattcgagctgaacttgggcaacctggatcacttttaggagatgatcagatttataatgtaatcgtaaccgcccacgcttttgtaataatctttttcatggttataccaattataattggtggtttcggaaattgattagttcctttaataattggagcgccagatatagccttcccacgaataaataacataagtttctgacttcttccaccatcatttcttcttctcctcgcctctgctggagtagaagctggagcaggtactggttgaacagtttatcctccattagctagcaatctagcacatgctggaccatctgttgatttagctattttttctcttcacttagccggtgtttcatcaattttagcttcaattaattttatcacaaccattattaatataaaaccaccagctatttcccaatatcaaacaccattatttgtttgatctattcttgtaaccactattcttcttctcctctcacttccagttcttgcagcaggaattacaatattacttacagatcgtaaccttaatactacattctttgaccctgcaggtggaggagacccaatcctttatcaacattta'
#sequence 2 contians indel errors
sequence2 = 'ctttatttaatttttggtgcatgagcaggaatagttggaacggctttaagtcttctaatccgagctgaactaggaccaacctgggtctctcctagggggatgatcaaatttataatgtaattgtaaccgcccatgcttttgtaataattttctttatagtaatacctgtcataattggtggttttggaaattaactaattccattaataattggtgcacctgacatagccttcccacgaataaataacataagctcctgacttcttccaccatcatttctccttctcctcgcctccgctggggttgaagccggagcaggtaccggttgaacagtttaccccccactggcaagcaaccttgctcatgccggaccatctgttgatttagctatcttctccctccatttagctggtatttcatcaattttagcctcaatccaacttcatcacaactattattaatataaaacccccagccatttctcaatatcaaacaccactatttgtttgatctatccttgtaactactattcttctcctcctttccctcccagttcttgcagcaggaattacaatcttacttacagaccgcaaccttaatactacattctttgatcctgcaggtggaggagacccaatcctttaccaacaccta'
#######
# print test 1
#######
dat = coi5p(sequence)
dat = coi5p_pipe(sequence, name = seqname)
dat
#######
# print test 3
#######
#test object print after each stage
dat = coi5p(sequence, name = seqname)
dat = frame(dat)
dat = translate(dat)
dat = indel_check(dat)
dat
dat = coi5p_pipe(sequence2)
dat
sequence = 'tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttatttg'
sequence_framed = '--------------------------------tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttattt'
sequence_AAcensored = "-----------MLGTAVSVIIRAELGQPGSLIGNDQIYNTIVTAHAFI?IFFMV?PI?IGGFGNWLVPV?LGAPD?AFPRMNN??FWLLPPSLTLL?IG?LTE?GAGTGWTVYPPLS?NIPHSGA?VDLTIFSLHLAGA?SLLGAINFITTIIN?RAA??SLDRIPLF"
sequence_AA5 = "-----------MLGTAVSVIIRAELGQPGSLIGNDQIYNTIVTAHAFIMIFFMVMPIMIGGFGNWLVPVMLGAPDMAFPRMNNMSFWLLPPSLTLLMIGMLTESGAGTGWTVYPPLSSNIPHSGASVDLTIFSLHLAGASSLLGAINFITTIINMRAASMSLDRIPLF"
dat = coi5p(sequence)
dat = frame(dat)
dat
dat$framed
sequence_framed
dat$data$ntPath
sequence3_framed = '-------------------------------------------------------------------------------------gcgctcttctgggggatgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggca'
sequence3_AAcensored = '----------------------------GALLGDDQIYNVIVTAHAFVMIFF?VMPI?IGGFGNWLIPL?IGAPDMAFPR?NN?SFWLLPPSFLLLLSSSGVEAGAGTGWTVYPPLAGNLAHAGASVDLTIFSLHLAGISSILGAINFITTIIN??PPAISQYQTPLFVWAVLVTAVLLLLSLPVLA'
sequence3_AA5 = '----------------------------GALLGDDQIYNVIVTAHAFVMIFFMVMPIMIGGFGNWLIPLMIGAPDMAFPRMNNMSFWLLPPSFLLLLSSSGVEAGAGTGWTVYPPLAGNLAHAGASVDLTIFSLHLAGISSILGAINFITTIINMKPPAISQYQTPLFVWAVLVTAVLLLLSLPVLA'
dat3 = coi5p(sequence_3 )
dat3 = frame(dat3)
sequence_3 = 'ggcgctcttctgggggatgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggca'
#trimmed version of this, 81 missing from front, 93 missing from back.
#"ctctatttagtatttggtgcctgagccgggatagtaggcaccgccctgagtctactgattcgggcggaactaagccagccgggcgctcttctgggggatgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggcagcaggcattactatgttacttacagaccgaaatctaaacaccactttctttgacccggcaggcgggggagatccaattttataccaacacctc"
sequence3_framed = '-------------------------------------------------------------------------------------gcgctcttctgggggatgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggca'
sequence3_AAcensored = '----------------------------GALLGDDQIYNVIVTAHAFVMIFF?VMPI?IGGFGNWLIPL?IGAPDMAFPR?NN?SFWLLPPSFLLLLSSSGVEAGAGTGWTVYPPLAGNLAHAGASVDLTIFSLHLAGISSILGAINFITTIIN??PPAISQYQTPLFVWAVLVTAVLLLLSLPVLA'
sequence3_AA5 = '----------------------------GALLGDDQIYNVIVTAHAFVMIFFMVMPIMIGGFGNWLIPLMIGAPDMAFPRMNNMSFWLLPPSFLLLLSSSGVEAGAGTGWTVYPPLAGNLAHAGASVDLTIFSLHLAGISSILGAINFITTIINMKPPAISQYQTPLFVWAVLVTAVLLLLSLPVLA'
dat3 = coi5p(sequence_3 )
dat3 = frame(dat3)
dat3$framed
sequence3_framed
x = '-------------------------------------------------------------------------------------'
nchar(x)
y = '----------------------------------------------------'
nchar(y)
dat3$data$ntPath
dat3 = translate(dat3)
dat3
dat3 = indel_check(dat3)
dat3
dat3$data$ntPath
sequence_3 = 'tcttctgggggatgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggca'
dat3 = coi5p(sequence_3 )
dat3 = frame(dat3)
dat3$framed
dat3$data$ntPath
sequence_3 = 'tgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggca'
dat3 = coi5p(sequence_3 )
dat3 = frame(dat3)
dat3$framed
sequence_3 = 'tgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggca'
dat3 = coi5p(sequence_3 )
dat3 = frame(dat3)
dat3$framed
dat3$data$ntPath
sequence_3 = 'caaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggca'
dat3 = coi5p(sequence_3 )
dat3 = frame(dat3)
dat3
dat3$framed
dat3$data$ntPath
x = '---------------------------------------------------------------------------------------------------------'
nchar(x)
#trimmed version of this, 102 missing from front, 93 missing from back.
#"ctctatttagtatttggtgcctgagccgggatagtaggcaccgccctgagtctactgattcgggcggaactaagccagccgggcgctcttctgggggatgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggcagcaggcattactatgttacttacagaccgaaatctaaacaccactttctttgacccggcaggcgggggagatccaattttataccaacacctc"
sequence3_framed = '-------------------------------------------------------------------------------------gcgctcttctgggggatgaccaaatctataacgtgatcgtcacagcccatgccttcgttatgattttctttatagtcatgccaattataatcgggggctttggaaactgattaattcccctaataatcggagcccctgatatggcattccctcgaataaataacataagcttctgactccttcctccatcctttctcctcctcctgtcttcatcaggagttgaagccggcgcgggtactggatgaacagtatacccccctctagccggcaacctcgcccacgcaggagcctctgttgatttaactatcttctcccttcatttagctggaatctcctcaattttaggagccattaattttattacgaccattattaacataaaacctccagccatctctcagtaccaaaccccccttttcgtttgagccgtgctagttactgctgtccttctattactttccctccccgtcctggca'
dat3$framed
dat3 = translate(dat3)
dat3$aaSeq
library(coi5p)
load('R/sysdata.rda')
View(nt_PHMM)
library(coi5p)
library(tidyverse)
load('R/sysdata.rda')
trans_df = read_tsv('/home/cnuge/Desktop/trans_df_revised.tsv')
trans_df
use_data(nt_PHMM, aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
library(devtools)
use_data(nt_PHMM, aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
library(coi5p)
head(trans_df)
trans_df[trans_df$phylogeny == "entomobryidae"]
trans_df[trans_df$phylogeny == "entomobryidae",]
View(trans_df)
trans_df = read_tsv('/home/cnuge/Desktop/trans_df_revised.tsv')
trans_df = as.data.frame(trans_df)
View(trans_df)
head(trans_df)
trans_df[trans_df$phylogeny == "entomobryidae",]
is.na(trans_df)
drop_na(trans_df)
trans_df = read_tsv('/home/cnuge/Desktop/trans_df_revised.tsv')
trans_df
trans_df[is.na(trans_df$phylogeny),]
trans_df[is.na(trans_df$phylogeny),]
trans_df = read_tsv('/home/cnuge/Desktop/trans_df_revised.tsv')
trans_df = as.data.frame(trans_df)
trans_df[trans_df$phylogeny == "entomobryidae",]
use_data(nt_PHMM, aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
library(coi5p)
library(coi5p)
library(coi5p)
library(devtools)
devtools::document()
library(coi5p)
library(coi5p)
output = coi5p_pipe(example_nt_string)
output
library(coi5p)
