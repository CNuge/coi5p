new_instance
}
#'
#'@param x a nucleotide string.
#'@param  name an optional character string. Identifier for the sequence.
#'
#'@return an object of class code{"coi5p"}
#'@examples
#'
#'@export
coi5p = function(x = character(), name = character()){
#if vector, paste them together
validate_coi5p(new_coi5p(tolower(x), name))
}
###########################
# coi5p - Generics and methods
# TODO - add checks to make sure data structures required have been initialized
# if not then return a warning saying that the previous method needs to be run first
#' ! this is where we would document this function in detail
#'@param x a coi5p class object
#'
#'@return an object of class code{"coi5p"}
#'@examples
#'
#'
#'@export
frame = function(x, ...){
UseMethod("frame")
}
frame.coi5p = function(x, ... ){
#input is the output structure from coi
#set the reading frame and store the framed string in $framed
x$data$ntBin = individual_DNAbin(x$raw)
x$data$ntPHMMout = aphid::Viterbi(nt_PHMM, x$data$ntBin, odds = FALSE)
if(leading_ins(x$data$ntPHMMout[['path']])){
trim_temp  = set_frame(x$raw, x$data$ntPHMMout[['path']])
x$data$ntBin = individual_DNAbin(trim_temp)
x$data$ntPHMMout = aphid::Viterbi(nt_PHMM, x$data$ntBin, odds = FALSE)
}else{
trim_temp = x$raw
}
x$framed = set_frame(trim_temp, x$data$ntPHMMout[['path']])
return(x)
}
#'
#'
#'@param x a coi5p class object for which frame() has been run
#'@param trans_table
#'
#'@return an object of class code{"coi5p"}
#'@examples
#'
#'@export
translate = function(x, ...){
UseMethod("translate")
}
translate.coi5p = function(x, ..., trans_table = 0){
if(trans_table == 0){
x$aaSeq = censored_translation(x$framed)
}else{
#split the DNA string into a vector, all characters to lower case
dna_list = strsplit(gsub('-', 'n', as.character(tolower(x$framed))),"")
dna_vec = dna_list[[1]]
#translate using the designated numcode, returns a vector of AAs
aa_vec = seqinr::translate(dna_vec, frame = 0, numcode=trans_table, ambiguous= TRUE, NAstring = '-')
x$aaSeq = paste(aa_vec, collapse= "")
}
return(x)
}
#' Check a translated coi5p sequence to see if an indel error is likely present
#'
#'
#'@param x a coi5p class object for which frame() and translate() have been run.
#'@param indel_threshold
#'
#'@return an object of class code{"coi5p"}
#'@examples
#'
#'@export
indel_check = function(x, ...){
UseMethod("indel_check")
}
indel_check.coi5p = function(x, ..., indel_threshold = -346.95 ){
x$data$aaBin = individual_AAbin(x$aaSeq)
x$data$aaPHMMout = aphid::Viterbi(aa_PHMM, x$data$aaBin, odds = FALSE)
x$AAscore = x$data$aaPHMMout[['score']] #have this print a threshold
if(x$AAscore > indel_threshold){
x$indel_likely = FALSE
}else{
x$indel_likely = TRUE
}
if(grepl('\\*', x$aaSeq)){
x$stop_codons = TRUE
}else{
x$stop_codons = FALSE
}
return(x)
}
sequence = 'ctttacctgatttttggtgcatgagcaggtatagttggaacagccctaagtctcctaattcgagctgaacttgggcaacctggatcacttttaggagatgatcagatttataatgtaatcgtaaccgcccacgcttttgtaataatctttttcatggttataccaattataattggtggtttcggaaattgattagttcctttaataattggagcgccagatatagccttcccacgaataaataacataagtttctgacttcttccaccatcatttcttcttctcctcgcctctgctggagtagaagctggagcaggtactggttgaacagtttatcctccattagctagcaatctagcacatgctggaccatctgttgatttagctattttttctcttcacttagccggtgtttcatcaattttagcttcaattaattttatcacaaccattattaatataaaaccaccagctatttcccaatatcaaacaccattatttgtttgatctattcttgtaaccactattcttcttctcctctcacttccagttcttgcagcaggaattacaatattacttacagatcgtaaccttaatactacattctttgaccctgcaggtggaggagacccaatcctttatcaacattta'
seqname = 'test_seq1'
dat = coi5p(sequence, name = seqname)
dat
dat = frame(dat)
dat
sequence_framed = '---ctttacctgatttttggtgcatgagcaggtatagttggaacagccctaagtctcctaattcgagctgaacttgggcaacctggatcacttttaggagatgatcagatttataatgtaatcgtaaccgcccacgcttttgtaataatctttttcatggttataccaattataattggtggtttcggaaattgattagttcctttaataattggagcgccagatatagccttcccacgaataaataacataagtttctgacttcttccaccatcatttcttcttctcctcgcctctgctggagtagaagctggagcaggtactggttgaacagtttatcctccattagctagcaatctagcacatgctggaccatctgttgatttagctattttttctcttcacttagccggtgtttcatcaattttagcttcaattaattttatcacaaccattattaatataaaaccaccagctatttcccaatatcaaacaccattatttgtttgatctattcttgtaaccactattcttcttctcctctcacttccagttcttgcagcaggaattacaatattacttacagatcgtaaccttaatactacattctttgaccctgcaggtggaggagacccaatcctttatcaacattta'
dat
expect_equal(dat$framed, sequence_framed)
dat = translate(dat)
dat
dat = translate(dat)
dat$aaSeq
translate
dat = translate(dat, trans_table = 5)
dat
dat = indel_check(dat)
dat
indel_check = function(x, ...){
UseMethod("indel_check")
}
indel_check.coi5p = function(x, ..., indel_threshold = -346.95 ){
x$data$aaBin = individual_AAbin(x$aaSeq)
x$data$aaPHMMout = aphid::Viterbi(aa_PHMM, x$data$aaBin, odds = FALSE)
x$aaScore = x$data$aaPHMMout[['score']] #have this print a threshold
if(x$aaScore > indel_threshold){
x$indel_likely = FALSE
}else{
x$indel_likely = TRUE
}
if(grepl('\\*', x$aaSeq)){
x$stop_codons = TRUE
}else{
x$stop_codons = FALSE
}
return(x)
}
dat = indel_check(dat)
dat$aaScore
dat$aaScore== -95.76042
dat$aaScore
dat$indel_likely
dat
seq_del = 'ctttacttaatctttggtgcatgagcaggaatagtaggtacagcccttagcttgcttattcgagcagaattaagccaacctggcacactcctgggagacgatcagatctacaatgttatcgtaactgctcacgcttttgtaataattttttttatggttatacctgtaataattggtgggttcggaaactgattagtgcctttaataattggtgcaccggacatagctttcccacgaataaataacataagcttttgactgctacccccctccctcctattacttttggcctctgctggagttgaagccggagccggaactggttgaacagtttatccccccctcgcaagtaatatagcccacgctggggcatcagtagacttagctattttctcgctccatttagcggtatttcctcaattcttgcctctatcaactttattacaaccattattaatataaaaccgcctgccatctctcaatatcaaacacccctttttgtttgatctattcttgtaaccacagtcctactcctcctttcacttcctgttcttgcagccgcaattacaatactacttaccgaccgtaatttaaacacaacattttttgatcctgctggtgggggtgacccaattctttaccaacattta'
test_del = coi5p(seq_del)
test_del
test_del = frame(test_del)
test_del
test_del = translate(test_del)
test_del
test_del = translate(test_del, trans_table = 5)
test_del
test_del = indel_check(test_del)
test_del
seq_del = 'accctttacttaatctttggtgcatgagcaggaatagtaggtacagcccttagcttgcttattcgagcagaattaagccaacctggcacactcctgggagacgatcagatctacaatgttatcgtaactgctcacgcttttgtaataattttttttatggttatacctgtaataattggtgggttcggaaactgattagtgcctttaataattggtgcaccggacatagctttcccacgaataaataacataagcttttgactgctacccccctccctcctattacttttggcctctgctggagttgaagccggagccggaactggttgaacagtttatccccccctcgcaagtaatatagcccacgctggggcatcagtagacttagctattttctcgctccatttagcggtatttcctcaattcttgcctctatcaactttattacaaccattattaatataaaaccgcctgccatctctcaatatcaaacacccctttttgtttgatctattcttgtaaccacagtcctactcctcctttcacttcctgttcttgcagccgcaattacaatactacttaccgaccgtaatttaaacacaacattttttgatcctgctggtgggggtgacccaattctttaccaacattta'
test_del = coi5p(seq_del)
test_del
test_del = frame(test_del)
test_del
test_del
character(0) == character(0)
is.null(character(0))
is.na(character(0))
dat = translate(dat)
dat
sequence = 'accctttacttaatctttggtgcatgagcaggaatagtaggtacagcccttagcttgcttattcgagcagaattaagccaacctggcacactcctgggagacgatcagatctacaatgttatcgtaactgctcacgcttttgtaataattttttttatggttatacctgtaataattggtgggttcggaaactgattagtgcctttaataattggtgcaccggacatagctttcccacgaataaataacataagcttttgactgctacccccctccctcctattacttttggcctctgctggagttgaagccggagccggaactggttgaacagtttatccccccctcgcaagtaatatagcccacgctggggcatcagtagacttagctattttctcgctccatttagcggtatttcctcaattcttgcctctatcaactttattacaaccattattaatataaaaccgcctgccatctctcaatatcaaacacccctttttgtttgatctattcttgtaaccacagtcctactcctcctttcacttcctgttcttgcagccgcaattacaatactacttaccgaccgtaatttaaacacaacattttttgatcctgctggtgggggtgacccaattctttaccaacattta'
sequence_framed = 'accctttacttaatctttggtgcatgagcaggaatagtaggtacagcccttagcttgcttattcgagcagaattaagccaacctggcacactcctgggagacgatcagatctacaatgttatcgtaactgctcacgcttttgtaataattttttttatggttatacctgtaataattggtgggttcggaaactgattagtgcctttaataattggtgcaccggacatagctttcccacgaataaataacataagcttttgactgctacccccctccctcctattacttttggcctctgctggagttgaagccggagccggaactggttgaacagtttatccccccctcgcaagtaatatagcccacgctggggcatcagtagacttagctattttctcgctccatttagcggtatttcctcaattcttgcctctatcaactttattacaaccattattaatataaaaccgcctgccatctctcaatatcaaacacccctttttgtttgatctattcttgtaaccacagtcctactcctcctttcacttcctgttcttgcagccgcaattacaatactacttaccgaccgtaatttaaacacaacattttttgatcctgctggtgggggtgacccaattctttaccaacattta'
dat = coi5p(sequence )
dat = frame(dat)
dat = translate(dat)
at$aaSeq
dat$aaSeq
dat = translate(dat, trans_table = 5)
dat$aaSeq
sequence_AAcensored = "TLYLIFGAWAG?VGTALSLLIRAELSQPGTLLGDDQIYNVIVTAHAFV?IFFMV?PV?IGGFGNWLVPL?IGAPD?AFPR?NN?SFWLLPPSLLLLLASAGVEAGAGTGWTVYPPLASN?AHAGASVDLAIFSLHLAVFPQFLPLSTLLQPLL??NRLPSLNI?HPFLFDLFL?PQSYSSFHFLFLQPQLQYYLPTVI?TQHFLILLVGVTQFFTNI-"
sequence_AA5 = "TLYLIFGAWAGMVGTALSLLIRAELSQPGTLLGDDQIYNVIVTAHAFVMIFFMVMPVMIGGFGNWLVPLMIGAPDMAFPRMNNMSFWLLPPSLLLLLASAGVEAGAGTGWTVYPPLASNMAHAGASVDLAIFSLHLAVFPQFLPLSTLLQPLLM*NRLPSLNIKHPFLFDLFL*PQSYSSFHFLFLQPQLQYYLPTVI*TQHFLILLVGVTQFFTNI"
dat = translate(dat)
dat$aaSeq == sequence_AAcensored
dat = indel_check(dat)
expect_equal(dat$indel_likely, TRUE)
dat$indel_likely
dat$stop_codons
dat
dat = translate(dat, trans_table = 5)
dat$aaSeq
dat = indel_check(dat)
dat$indel_likely
dat$stop_codons
sequence = 'ctttatttaatttttggtgcatgagcaggaatagttggaacggctttaagtcttctaatccgagctgaactaggaccaacctgggtctctcctaggggatgatcaaatttataatgtaattgtaaccgcccatgcttttgtaataattttctttatagtaatacctgtcataattggtggttttggaaattaactaattccattaataattggtgcacctgacatagccttcccacgaataaataacataagctcctgacttcttccaccatcatttctccttctcctcgcctccgctggggttgaagccggagcaggtaccggttgaacagtttaccccccactggcaagcaaccttgctcatgccggaccatctgttgatttagctatcttctccctccatttagctggtatttcatcaattttagcctcaatccaacttcatcacaactattattaatataaaacccccagccatttctcaatatcaaacaccactatttgtttgatctatccttgtaactactattcttctcctcctttccctcccagttcttgcagcaggaattacaatcttacttacagaccgcaaccttaatactacattctttgatcctgcaggtggaggagacccaatcctttaccaacaccta'
sequence_framed = '---ctttatttaatttttggtgcatgagcaggaatagttggaacggctttaagtcttctaatccgagctgaactaggaccaacctgggtctctcctaggggatgatcaaatttataatgtaattgtaaccgcccatgcttttgtaataattttctttatagtaatacctgtcataattggtggttttggaaattaactaattccattaataattggtgcacctgacatagccttcccacgaataaataacataagctcctgacttcttccaccatcatttctccttctcctcgcctccgctggggttgaagccggagcaggtaccggttgaacagtttaccccccactggcaagcaaccttgctcatgccggaccatctgttgatttagctatcttctccctccatttagctggtatttcatcaattttagcctcaatccaacttcatcacaactattattaatataaaacccccagccatttctcaatatcaaacaccactatttgtttgatctatccttgtaactactattcttctcctcctttccctcccagttcttgcagcaggaattacaatcttacttacagaccgcaaccttaatactacattctttgatcctgcaggtggaggagacccaatcctttaccaacaccta'
dat = coi5p(sequence )
dat$raw
dat = frame(dat)
dat$framed
dat = coi5p(sequence )
sequence = 'ctttatttaatttttggtgcatgagcaggaatagttggaacggctttaagtcttctaatccgagctgaactaggaccaacctgggtctctcctaggggatgatcaaatttataatgtaattgtaaccgcccatgcttttgtaataattttctttatagtaatacctgtcataattggtggttttggaaattaactaattccattaataattggtgcacctgacatagccttcccacgaataaataacataagctcctgacttcttccaccatcatttctccttctcctcgcctccgctggggttgaagccggagcaggtaccggttgaacagtttaccccccactggcaagcaaccttgctcatgccggaccatctgttgatttagctatcttctccctccatttagctggtatttcatcaattttagcctcaatccaacttcatcacaactattattaatataaaacccccagccatttctcaatatcaaacaccactatttgtttgatctatccttgtaactactattcttctcctcctttccctcccagttcttgcagcaggaattacaatcttacttacagaccgcaaccttaatactacattctttgatcctgcaggtggaggagacccaatcctttaccaacaccta'
sequence_framed = '---ctttatttaatttttggtgcatgagcaggaatagttggaacggctttaagtcttctaatccgagctgaactaggaccaacctgggtctctcctaggggatgatcaaatttataatgtaattgtaaccgcccatgcttttgtaataattttctttatagtaatacctgtcataattggtggttttggaaattaactaattccattaataattggtgcacctgacatagccttcccacgaataaataacataagctcctgacttcttccaccatcatttctccttctcctcgcctccgctggggttgaagccggagcaggtaccggttgaacagtttaccccccactggcaagcaaccttgctcatgccggaccatctgttgatttagctatcttctccctccatttagctggtatttcatcaattttagcctcaatccaacttcatcacaactattattaatataaaacccccagccatttctcaatatcaaacaccactatttgtttgatctatccttgtaactactattcttctcctcctttccctcccagttcttgcagcaggaattacaatcttacttacagaccgcaaccttaatactacattctttgatcctgcaggtggaggagacccaatcctttaccaacaccta'
dat = coi5p(sequence )
expect_equal(dat$raw, sequence)
dat = frame(dat)
dat = translate(dat)
dat$aaSeq
dat = indel_check(dat)
dat$indel_likely
dat$stop_codons
sequence = 'ctttatttaatttttggtgcatgagcaggaatagttggaacggctttaagtcttctaatccgagctgaactaggaccaacctgggtctctcctagggggatgatcaaatttataatgtaattgtaaccgcccatgcttttgtaataattttctttatagtaatacctgtcataattggtggttttggaaattaactaattccattaataattggtgcacctgacatagccttcccacgaataaataacataagctcctgacttcttccaccatcatttctccttctcctcgcctccgctggggttgaagccggagcaggtaccggttgaacagtttaccccccactggcaagcaaccttgctcatgccggaccatctgttgatttagctatcttctccctccatttagctggtatttcatcaattttagcctcaatccaacttcatcacaactattattaatataaaacccccagccatttctcaatatcaaacaccactatttgtttgatctatccttgtaactactattcttctcctcctttccctcccagttcttgcagcaggaattacaatcttacttacagaccgcaaccttaatactacattctttgatcctgcaggtggaggagacccaatcctttaccaacaccta'
sequence_framed = '---ctttatttaatttttggtgcatgagcaggaatagttggaacggctttaagtcttctaatccgagctgaactaggaccaacctgggtctctcctagggggatgatcaaatttataatgtaattgtaaccgcccatgcttttgtaataattttctttatagtaatacctgtcataattggtggttttggaaattaactaattccattaataattggtgcacctgacatagccttcccacgaataaataacataagctcctgacttcttccaccatcatttctccttctcctcgcctccgctggggttgaagccggagcaggtaccggttgaacagtttaccccccactggcaagcaaccttgctcatgccggaccatctgttgatttagctatcttctccctccatttagctggtatttcatcaattttagcctcaatccaacttcatcacaactattattaatataaaacccccagccatttctcaatatcaaacaccactatttgtttgatctatccttgtaactactattcttctcctcctttccctcccagttcttgcagcaggaattacaatcttacttacagaccgcaaccttaatactacattctttgatcctgcaggtggaggagacccaatcctttaccaacaccta'
dat = coi5p(sequence )
dat = frame(dat)
dat = translate(dat)
dat$aaSeq
dat = translate(dat, trans_table = 5)
dat$aaSeq
dat = indel_check(dat)
dat$indel_likely
dat$stop_codons
dat$stop_codons
seq_long = 'AACCGCTGATTATTTTCAACCAACCACAAAGATATCGGCACCCTTTACCTTCTATTTGGTGCCTGAGCTGGTATAGTAGGAACCGCCTTAAGCCTACTAATTCGCGCCGAACTAGGCCAACCCGGAACTCTACTCGGAGATGACCAAATCTACAACGTAATTGTAACCGCACATGCATTTGTAATAATTTTCTTTATAGTAATGCCTATTATAATCGGTGGATTCGGCAACTGACTAGTTCCTCTGATAATTGGAGCCCCTGATATAGCATTTCCTCGGATAAATAACATAAGCTTTTGACTTCTTCCCCCATCTTTCCTGTTACTCCTAGCATCCTCTATGGTTGAGGCCGGAGCAGGAACAGGTTGTAAGGTAGTATTCTCTCTAGCAGGCAACCTAGCCCATGCAGGAGCCTCAGTAGACCTAACTATTTTCTCCCTACACCTGGCAGGTGTCTCTTCAATTCTAGGAGCCATTAATTTTATTACAACTATTATTAATATAAAACCCCCTGCGATGTCACAGTATCAAACCCCCTTGTTTGTATGATCTGTACTAATCACTGCCGTACTTCTCCTTCTCTCACTTCCTGTATTAGCAGCTGGTATCACAATACTACTAACGGACCGAAACCTGAACACAACCTTTTTTGACCCAGCAGGAGGAGGAGACCCTATCCTATATCAACACCTATTCTGATTCTTTGGGCACCCTGAAGTATATATTCTTATTTTACCTGGGTTTGGGATAATCTCCCATATTGTGACCTACTATTCAGGAAAAAAAGAACCATTCGGATATATAGGAATAGTATGAGCCATAATATCAATTGGGTTCCTAGGATTCATTGTATGAGCCCACCATATATTCACAGTCGGAATAG'
test_long = coi5p(seq_long)
test_long
test_long = frame(test_long)
test_long
tolower("AACCGCTGATTATTTTCAACCAACCACAAAGATATCGGCA")
seq_long = 'aaccgctgattattttcaaccaaccacaaagatatcggcaacattatacattctttttagaatttgggcaggccttcttggaagaagcttaagtcttataatccgtattgagctaaggcaaccaaaagaaattttaattaatagtttaatatataacacaattgtaacagcccatgcaattgtaataattttttttactgttataccttttttaattggaggacttggtaattgactaattcctttattcttacatttgccagacatagcttttcctcgcttaaataatgttagtttttggcttctccctccttccttaatattgtttttaataagactatttagagggagaggagctggtacaggttggacgatatacccccctctctctaatagcctttataggcctagtataagggtagacatagttattttatctttacatttagcggggacatcctctttattaggagctttaaattttagagttactattttaacttgttctttttttaaaaagggattaaatagtatgccagtttttatttgagcgttacttgtaacttctttcttgttacatttatctgtaccagtccttgcaggagctttaacaatgctattattggaccgtaattttaatacaactttttttgatccttcaggagggggggaccctgtcctgtatcagcattta'
test_long = coi5p(seq_long)
test_long
test_long = frame(test_long)
test_long
sequence = 'aaccgctgattattttcaaccaaccacaaagatatcggcaacattatacattctttttagaatttgggcaggccttcttggaagaagcttaagtcttataatccgtattgagctaaggcaaccaaaagaaattttaattaatagtttaatatataacacaattgtaacagcccatgcaattgtaataattttttttactgttataccttttttaattggaggacttggtaattgactaattcctttattcttacatttgccagacatagcttttcctcgcttaaataatgttagtttttggcttctccctccttccttaatattgtttttaataagactatttagagggagaggagctggtacaggttggacgatatacccccctctctctaatagcctttataggcctagtataagggtagacatagttattttatctttacatttagcggggacatcctctttattaggagctttaaattttagagttactattttaacttgttctttttttaaaaagggattaaatagtatgccagtttttatttgagcgttacttgtaacttctttcttgttacatttatctgtaccagtccttgcaggagctttaacaatgctattattggaccgtaattttaatacaactttttttgatccttcaggagggggggaccctgtcctgtatcagcattta'
sequence_framed = '-cattatacattctttttagaatttgggcaggccttcttggaagaagcttaagtcttataatccgtattgagctaaggcaaccaaaagaaattttaattaatagtttaatatataacacaattgtaacagcccatgcaattgtaataattttttttactgttataccttttttaattggaggacttggtaattgactaattcctttattcttacatttgccagacatagcttttcctcgcttaaataatgttagtttttggcttctccctccttccttaatattgtttttaataagactatttagagggagaggagctggtacaggttggacgatatacccccctctctctaatagcctttataggcctagtataagggtagacatagttattttatctttacatttagcggggacatcctctttattaggagctttaaattttagagttactattttaacttgttctttttttaaaaagggattaaatagtatgccagtttttatttgagcgttacttgtaacttctttcttgttacatttatctgtaccagtccttgcaggagctttaacaatgctattattggaccgtaattttaatacaactttttttgatccttcaggagggggggaccctgtcctgtatcagcattta'
sequence = 'aaccgctgattattttcaaccaaccacaaagatatcggcaacattatacattctttttagaatttgggcaggccttcttggaagaagcttaagtcttataatccgtattgagctaaggcaaccaaaagaaattttaattaatagtttaatatataacacaattgtaacagcccatgcaattgtaataattttttttactgttataccttttttaattggaggacttggtaattgactaattcctttattcttacatttgccagacatagcttttcctcgcttaaataatgttagtttttggcttctccctccttccttaatattgtttttaataagactatttagagggagaggagctggtacaggttggacgatatacccccctctctctaatagcctttataggcctagtataagggtagacatagttattttatctttacatttagcggggacatcctctttattaggagctttaaattttagagttactattttaacttgttctttttttaaaaagggattaaatagtatgccagtttttatttgagcgttacttgtaacttctttcttgttacatttatctgtaccagtccttgcaggagctttaacaatgctattattggaccgtaattttaatacaactttttttgatccttcaggagggggggaccctgtcctgtatcagcattta'
sequence_framed = '-cattatacattctttttagaatttgggcaggccttcttggaagaagcttaagtcttataatccgtattgagctaaggcaaccaaaagaaattttaattaatagtttaatatataacacaattgtaacagcccatgcaattgtaataattttttttactgttataccttttttaattggaggacttggtaattgactaattcctttattcttacatttgccagacatagcttttcctcgcttaaataatgttagtttttggcttctccctccttccttaatattgtttttaataagactatttagagggagaggagctggtacaggttggacgatatacccccctctctctaatagcctttataggcctagtataagggtagacatagttattttatctttacatttagcggggacatcctctttattaggagctttaaattttagagttactattttaacttgttctttttttaaaaagggattaaatagtatgccagtttttatttgagcgttacttgtaacttctttcttgttacatttatctgtaccagtccttgcaggagctttaacaatgctattattggaccgtaattttaatacaactttttttgatccttcaggagggggggaccctgtcctgtatcagcattta'
dat = coi5p(sequence )
dat = frame(dat)
dat$framed == sequence_framed
dat = translate(dat)
dat$aaSeq
dat = translate(dat, trans_table = 5)
dat$aaSeq
dat = indel_check(dat)
dat$indel_likely
dat$stop_codons
seq_short = 'tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttatttgtctgatcggtagggatcactgccttactactgctactctcccttccagtgctagctggcgctatcactatg'
test_short = coi5p(seq_short)
test_short
test_short = frame(test_short)
test_short
seq_short = 'tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttatttg'
test_short = coi5p(seq_short)
test_short
test_short = frame(test_short)
test_short
test_short = translate(test_short)
test_short
test_short = indel_check(test_short)
test_short
sequence = 'tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttatttg'
sequence_framed = '--------------------------------tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttatttg'
sequence = 'tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttatttg'
sequence_framed = '--------------------------------tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttatttg'
sequence_AAcensored =
sequence_AA5 =
dat = coi5p(sequence )
dat = frame(dat)
dat$framed== sequence_framed
dat = translate(dat)
dat$aaSeq
dat = translate(dat, trans_table = 5)
dat$aaSeq
seq_Ns = 'actttatatctaatttttggggcatgatcagcgatagttggaacagccttnnnnnnnnnnattcgagcagaactaggtcaacctggaagtttaattggagacgaccagatttataatgtgattgttactgcccacgcttttattataattttttttatggttatgcctattataattgggggattcggaaattgacttctacccttaatactaggagctccagatatagcttttccacgtctcaataatataagattttggttattaccccctgccttaatgttattaattagaggatccctagtagaagccggggcgggaactggatggacagtatacccacctctagccagcaatatcgcacnnnnnnnnnnctctgtagacctctctattttttcattacacttagcgggagcttcctctcttttaggagctatcaacttcatatccacagtaattaatatacgagctgaaactttaacattcgaccgtttacctttatttgtatgtagagtatttgtgacggtgattcttctattattatctttacctgtgttagccggagccattactatgcttttaactgaccggaatcttaatacnnnnnttttcgaccctacagggggaggagaccctattttataccaacactta'
test_Ns = coi5p(seq_Ns)
test_Ns
test_Ns = frame(test_Ns)
test_Ns
sequence_AAcensored =
sequence_AA5 =
dat = coi5p(sequence )
dat = frame(dat)
dat$framed
seq_Ns = 'actttatatctaatttttggggcatgatcagcgatagttggaacagccttnnnnnnnnnnattcgagcagaactaggtcaacctggaagtttaattggagacgaccagatttataatgtgattgttactgcccacgcttttattataattttttttatggttatgcctattataattgggggattcggaaattgacttctacccttaatactaggagctccagatatagcttttccacgtctcaataatataagattttggttattaccccctgccttaatgttattaattagaggatccctagtagaagccggggcgggaactggatggacagtatacccacctctagccagcaatatcgcacnnnnnnnnnnctctgtagacctctctattttttcattacacttagcgggagcttcctctcttttaggagctatcaacttcatatccacagtaattaatatacgagctgaaactttaacattcgaccgtttacctttatttgtatgtagagtatttgtgacggtgattcttctattattatctttacctgtgttagccggagccattactatgcttttaactgaccggaatcttaatacnnnnnttttcgaccctacagggggaggagaccctattttataccaacactta'
sequence = 'actttatatctaatttttggggcatgatcagcgatagttggaacagccttnnnnnnnnnnattcgagcagaactaggtcaacctggaagtttaattggagacgaccagatttataatgtgattgttactgcccacgcttttattataattttttttatggttatgcctattataattgggggattcggaaattgacttctacccttaatactaggagctccagatatagcttttccacgtctcaataatataagattttggttattaccccctgccttaatgttattaattagaggatccctagtagaagccggggcgggaactggatggacagtatacccacctctagccagcaatatcgcacnnnnnnnnnnctctgtagacctctctattttttcattacacttagcgggagcttcctctcttttaggagctatcaacttcatatccacagtaattaatatacgagctgaaactttaacattcgaccgtttacctttatttgtatgtagagtatttgtgacggtgattcttctattattatctttacctgtgttagccggagccattactatgcttttaactgaccggaatcttaatacnnnnnttttcgaccctacagggggaggagaccctattttataccaacactta'
sequence_framed = 'actttatatctaatttttggggcatgatcagcgatagttggaacagccttnnnnnnnnnnattcgagcagaactaggtcaacctggaagtttaattggagacgaccagatttataatgtgattgttactgcccacgcttttattataattttttttatggttatgcctattataattgggggattcggaaattgacttctacccttaatactaggagctccagatatagcttttccacgtctcaataatataagattttggttattaccccctgccttaatgttattaattagaggatccctagtagaagccggggcgggaactggatggacagtatacccacctctagccagcaatatcgcacnnnnnnnnnnctctgtagacctctctattttttcattacacttagcgggagcttcctctcttttaggagctatcaacttcatatccacagtaattaatatacgagctgaaactttaacattcgaccgtttacctttatttgtatgtagagtatttgtgacggtgattcttctattattatctttacctgtgttagccggagccattactatgcttttaactgaccggaatcttaatacnnnnnttttcgaccctacagggggaggagaccctattttataccaacactta'
sequence_AAcensored =
sequence_AA5 =
dat = coi5p(sequence )
dat = frame(dat)
dat
dat = translate(dat)
dat
dat = translate(dat, trans_table = 5)
dat$aaSeq
dat = indel_check(dat)
dat$indel_likely
dat$stop_codons
sequence = 'aaccgctgattattttcaaccaaccacaaagatatcggcaacattatacattctttttagaatttgggcaggccttcttggaagaagcttaagtcttataatccgtattgagctaaggcaaccaaaagaaattttaattaatagtttaatatataacacaattgtaacagcccatgcaattgtaataattttttttactgttataccttttttaattggaggacttggtaattgactaattcctttattcttacatttgccagacatagcttttcctcgcttaaataatgttagtttttggcttctccctccttccttaatattgtttttaataagactatttagagggagaggagctggtacaggttggacgatatacccccctctctctaatagcctttataggcctagtataagggtagacatagttattttatctttacatttagcggggacatcctctttattaggagctttaaattttagagttactattttaacttgttctttttttaaaaagggattaaatagtatgccagtttttatttgagcgttacttgtaacttctttcttgttacatttatctgtaccagtccttgcaggagctttaacaatgctattattggaccgtaattttaatacaactttttttgatccttcaggagggggggaccctgtcctgtatcagcattta'
sequence_framed = '-cattatacattctttttagaatttgggcaggccttcttggaagaagcttaagtcttataatccgtattgagctaaggcaaccaaaagaaattttaattaatagtttaatatataacacaattgtaacagcccatgcaattgtaataattttttttactgttataccttttttaattggaggacttggtaattgactaattcctttattcttacatttgccagacatagcttttcctcgcttaaataatgttagtttttggcttctccctccttccttaatattgtttttaataagactatttagagggagaggagctggtacaggttggacgatatacccccctctctctaatagcctttataggcctagtataagggtagacatagttattttatctttacatttagcggggacatcctctttattaggagctttaaattttagagttactattttaacttgttctttttttaaaaagggattaaatagtatgccagtttttatttgagcgttacttgtaacttctttcttgttacatttatctgtaccagtccttgcaggagctttaacaatgctattattggaccgtaattttaatacaactttttttgatccttcaggagggggggaccctgtcctgtatcagcattta'
sequence_AAcensored = "-LYILF?IWAGLLG?SLSL?IRIEL?QP?EILINSL?YNTIVTAHAIV?IFFTV?PFLIGGLGNWLIPLFLHLPD?AFPRLNNVSFWLLPPSL?LFL??LF?G?GAGTGWT?YPPLSNSLY?PS??VD?VILSLHLAGTSSLLGALNF?VTILTCSFF?KGLNSMPVFIWALLVTSFLLHLSVPVLAGALTMLLLDRNFNTTFFDPSGGGDPVLYQHL"
sequence_AA5 = "-LYILFSIWAGLLGSSLSLMIRIELSQPKEILINSLMYNTIVTAHAIVMIFFTVMPFLIGGLGNWLIPLFLHLPDMAFPRLNNVSFWLLPPSLMLFLMSLFSGSGAGTGWTMYPPLSNSLYSPSMSVDMVILSLHLAGTSSLLGALNFSVTILTCSFFKKGLNSMPVFIWALLVTSFLLHLSVPVLAGALTMLLLDRNFNTTFFDPSGGGDPVLYQHL"
dat = coi5p(sequence )
dat = frame(dat)
dat = translate(dat)
dat = indel_check(dat)
dat$indel_likely, FALSE
dat
nchar(dat$aaSeq)
dat = indel_check(dat)
expect_equal(dat$indel_likely, FALSE)
dat$indel_likely
dat = translate(dat, trans_table = 5)
dat$indel_likely
dat$stop_codons
dat
sequence = 'aaccgctgattattttcaaccaaccacaaagatatcggcaaactttatattttatttttggagcttgagctggaatagttggaacatctttaagaattttaattcgagctgaattaggacatcctggagcattaattggagatgatcaaatttataatgtaattgtaactgcacatgcttttattataattttttttatggttatacctattataattggtggatttggaaattgattagtgcctttaatattaggtgctcctgatatagcattcccacgaataaataatataagattttgactactacctcctgctctttctttactattagtaagtagaatagttgaaaatggagctggaacaggatgaactgtttatccacctttatccgctggaattgctcatggtggagcttcagttgatttagctattttttctctacatttagcagggatttcttcaattttaggagctctaaattttattacaactgtaattaatatacgatcaacaggaatttcattagatcgtatacctttatttgtttgatcagtagttattactgctttattattgttattatcacttccagtactagcaggagctattactatattattaacagatcgaaatttaaatacatcattttttgacccagcgggaggaggagatcctattttatatcaacattta'
sequence = 'aaccgctgattattttcaaccaaccacaaagatatcggcaaactttatattttatttttggagcttgagctggaatagttggaacatctttaagaattttaattcgagctgaattaggacatcctggagcattaattggagatgatcaaatttataatgtaattgtaactgcacatgcttttattataattttttttatggttatacctattataattggtggatttggaaattgattagtgcctttaatattaggtgctcctgatatagcattcccacgaataaataatataagattttgactactacctcctgctctttctttactattagtaagtagaatagttgaaaatggagctggaacaggatgaactgtttatccacctttatccgctggaattgctcatggtggagcttcagttgatttagctattttttctctacatttagcagggatttcttcaattttaggagctctaaattttattacaactgtaattaatatacgatcaacaggaatttcattagatcgtatacctttatttgtttgatcagtagttattactgctttattattgttattatcacttccagtactagcaggagctattactatattattaacagatcgaaatttaaatacatcattttttgacccagcgggaggaggagatcctattttatatcaacattta'
sequence_framed = 'actttatattttatttttggagcttgagctggaatagttggaacatctttaagaattttaattcgagctgaattaggacatcctggagcattaattggagatgatcaaatttataatgtaattgtaactgcacatgcttttattataattttttttatggttatacctattataattggtggatttggaaattgattagtgcctttaatattaggtgctcctgatatagcattcccacgaataaataatataagattttgactactacctcctgctctttctttactattagtaagtagaatagttgaaaatggagctggaacaggatgaactgtttatccacctttatccgctggaattgctcatggtggagcttcagttgatttagctattttttctctacatttagcagggatttcttcaattttaggagctctaaattttattacaactgtaattaatatacgatcaacaggaatttcattagatcgtatacctttatttgtttgatcagtagttattactgctttattattgttattatcacttccagtactagcaggagctattactatattattaacagatcgaaatttaaatacatcattttttgacccagcgggaggaggagatcctattttatatcaacattta'
dat = coi5p(sequence )
dat = frame(dat)
dat$framed
sequence_framed = '-ctttatattttatttttggagcttgagctggaatagttggaacatctttaagaattttaattcgagctgaattaggacatcctggagcattaattggagatgatcaaatttataatgtaattgtaactgcacatgcttttattataattttttttatggttatacctattataattggtggatttggaaattgattagtgcctttaatattaggtgctcctgatatagcattcccacgaataaataatataagattttgactactacctcctgctctttctttactattagtaagtagaatagttgaaaatggagctggaacaggatgaactgtttatccacctttatccgctggaattgctcatggtggagcttcagttgatttagctattttttctctacatttagcagggatttcttcaattttaggagctctaaattttattacaactgtaattaatatacgatcaacaggaatttcattagatcgtatacctttatttgtttgatcagtagttattactgctttattattgttattatcacttccagtactagcaggagctattactatattattaacagatcgaaatttaaatacatcattttttgacccagcgggaggaggagatcctattttatatcaacattta'
dat = translate(dat)
dat$aaSeq
sequence_AA5 = "-LYILFSIWAGLLGSSLSLMIRIELSQPKEILINSLMYNTIVTAHAIVMIFFTVMPFLIGGLGNWLIPLFLHLPDMAFPRLNNVSFWLLPPSLMLFLMSLFSGSGAGTGWTMYPPLSNSLYSPSMSVDMVILSLHLAGTSSLLGALNFSVTILTCSFFKKGLNSMPVFIWALLVTSFLLHLSVPVLAGALTMLLLDRNFNTTFFDPSGGGDPVLYQHL"
dat = translate(dat, trans_table = 5)
dat$aaSeq
sequence_AAcensored = "-LYFIFGAWAG?VGTSL?ILIRAELGHPGALIGDDQIYNVIVTAHAFI?IFFMV?PI?IGGFGNWLVPL?LGAPD?AFPR?NN??FWLLPPALSLLLVS??VENGAGTGWTVYPPLSAGIAHGGASVDLAIFSLHLAGISSILGALNFITTVIN?RSTGISLDR?PLFVWSVVITALLLLLSLPVLAGAIT?LLTDRNLNTSFFDPAGGGDPILYQHL"
sequence_AA5 = "-LYFIFGAWAGMVGTSLSILIRAELGHPGALIGDDQIYNVIVTAHAFIMIFFMVMPIMIGGFGNWLVPLMLGAPDMAFPRMNNMSFWLLPPALSLLLVSSMVENGAGTGWTVYPPLSAGIAHGGASVDLAIFSLHLAGISSILGALNFITTVINMRSTGISLDRMPLFVWSVVITALLLLLSLPVLAGAITMLLTDRNLNTSFFDPAGGGDPILYQHL"
dat = coi5p(sequence )
dat = frame(dat)
dat = translate(dat)
dat = indel_check(dat)
dat
dat = translate(dat, trans_table = 5)
dat = indel_check(dat)
dat$indel_likely
dat$stop_codons
test1nt = 'CTATATTTAATCTTTGGTGCATGAGCAGGAATAGTGGGCACAGCCCTTAGCCTACTTATTCGTACAGAATTAAGCCAACCCGGGACACTTCTGGGGGATGATCAAATCTACAATGTTATTGTAACTGCTCACGCTTTTGTAATAATCTTTTTTATAGTTATACCCGTAATAATCGGCGGTTTCGGAAATTGATTAGTGCCTTTAATAATTGGTGCACCAGACATAGCTTTTCCTCGAATAAATAACATAAGTTTTTGACTATTGCCACCATCTCTTCTATTACTTTTAGCTTCTGCTGGCGTCGAAGCAGGGGCTGGAACCGGATGAACGGTCTACCCCCCTCTTGCAGGTAATATAGCCCATGCTGGCGCATCCGTGGATTTAGCCATCTTCTCACTCCATTTAGCCGGTATTTCCTCCATTTTAGCCTCTATTAACTTTATTACTACTATTATTAATATAAAACCGCCTGCAATTTCTCAATACCAAACCCCACTCTTTGTCTGATCCATCCTTGTAACCACTGTCCTTCTTCTACTTGCTCTCCCCGTCCTTGCCGCTGCAATTACAATACTCTTAACTGACCGTAATTTAAATACAACATTTTTTGACCCAGCGGGAGGAGGGGACCCCATTCTTTACCAACACTTA'
test1aa0 = "LYLIFGAWAG?VGTALSLLIRTELSQPGTLLGDDQIYNVIVTAHAFV?IFF?V?PV?IGGFGNWLVPL?IGAPD?AFPR?NN?SFWLLPPSLLLLLASAGVEAGAGTGWTVYPPLAGN?AHAGASVDLAIFSLHLAGISSILASINFITTIIN??PPAISQYQTPLFVWSILVTTVLLLLALPVLAAAIT?LLTDRNLNTTFFDPAGGGDPILYQHL"
expect_equal(censored_translation(test1nt), test1aa0)
censored_translation(test1nt)
test3nt = "-accttatatatgttatttgccttctgatcagggcttttaggaacatcaataagactcctcatccgaatagaacttgctcgaccaggtgttttccttggtagagacactttatataatacaattgttactgcacatgcgtgccttataattttttttatagtaatacctataatgataggaggttttggtaattgaataattcctcttataatacacacgcccgacatggcttttccacgactaaacaatttaagattttgacttttagtcccatctcttttgctacttttctcctcttcaactttagaatcaggcgtaggcacaggatgaactgtttatcctccgctttcaaacgcatcatatcacccgggcccccctgttgatctcgctattttctccttacatgttgctggggcctcatcaattttggcatctcttaatttcattactaccgtcattaatatgcgtccaacccgcatttcttatgaaaacacccctctacttatctgatctattatcctcaccgcaattcttctagttttagccatccctgttcttgcaggaggaattaccatactcttaacagaccgaaaccttaataccactttttttgaccctgcaggtgggggggacccaatcctctttcaacacctt"
trans_df
trans_df[trans_df$taxon == "Rhagionidae",]
trans_df[trans_df$taxon == "Iguanidae",]
sequence = 'tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttatttg'
sequence_framed = '--------------------------------tatgctagggaccgcagttagtgtgattattcgtgctgagttaggacagccaggatcacttattgggaacgatcaaatttacaatacaattgtgactgctcatgcctttattataattttcttcatggtgatacctatcataatcggaggattcggtaattgactggtaccggtaatactaggagcaccagatatagctttccctcgtatgaacaacataagattttgattactccctccttccttaacccttcttataatcgggatactaacagaaagaggggcaggaacaggatgaactgtataccctcctctctcaagaaatatccctcactcaggagctagagtagacctaacaattttttcactacatttagctggagccaggtcacttcttggggctattaatttcatcacaacaattattaatatacgagcagctagaatatctcttgatcgaattcctttatttg'
sequence_AAcensored = "-----------MLGTAVSVIIRAELGQPGSLIGNDQIYNTIVTAHAFI?IFFMV?PI?IGGFGNWLVPV?LGAPD?AFPRMNN??FWLLPPSLTLL?IG?LTE?GAGTGWTVYPPLS?NIPHSGA?VDLTIFSLHLAGA?SLLGAINFITTIIN?RAA??SLDRIPLF-"
sequence_AA5 = "-----------MLGTAVSVIIRAELGQPGSLIGNDQIYNTIVTAHAFIMIFFMVMPIMIGGFGNWLVPVMLGAPDMAFPRMNNMSFWLLPPSLTLLMIGMLTESGAGTGWTVYPPLSSNIPHSGASVDLTIFSLHLAGASSLLGAINFITTIINMRAASMSLDRIPLF"
dat = coi5p(sequence )
expect_equal(dat$raw, sequence)
dat = frame(dat)
dat = translate(dat)
dat = indel_check(dat)
dat$indel_likely
dat
dat = translate(dat, trans_table = 5)
dat$indel_likely
dat = translate(dat, trans_table = 5)
dat = indel_check(dat)
dat$indel_likely
dat = translate(dat)
dat = indel_check(dat)
dat$indel_likely
dat$stop_codons
dat = translate(dat, trans_table = 5)
dat = indel_check(dat)
dat$indel_likely
dat$stop_codons
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?aphid::deriveHMM()
library(coi5p)
?coi5p
?aphid::deriveHMM()
?coi5p
nt_PHMM
aa_PHMM
trans_df
###
# For storing data in the R folder - used currently
###
example_nt_string = 'ctctacttgatttttggtgcatgagcaggaatagttggaatagctttaagtttactaattcgcgctgaactaggtcaacccggatctcttttaggggatgatcagatttataatgtgatcgtaaccgcccatgcctttgtaataatcttttttatggttatacctgtaataattggtggctttggcaattgacttgttcctttaataattggtgcaccagatatagcattccctcgaataaataatataagtttctggcttcttcctccttcgttcttacttctcctggcctccgcaggagtagaagctggagcaggaaccggatgaactgtatatcctcctttagcaggtaatttagcacatgctggcccctctgttgatttagccatcttttcccttcatttggccggtatctcatcaattttagcctctattaattttattacaactattattaatataaaacccccaactatttctcaatatcaaacaccattatttgtttgatctattcttatcaccactgttcttctactccttgctctccctgttcttgcagccggaattacaatattattaacagaccgcaacctcaacactacattctttgaccccgcagggggaggggacccaattctctatcaacactta'
use_data(nt_PHMM , aa_PHMM, trans_df, example_nt_string, internal = TRUE)
library(devtools)
use_data(nt_PHMM , aa_PHMM, trans_df, example_nt_string, internal = TRUE)
###############################################################################
#' Nucleotide profile hidden markov model for coi5p.
#'
#' removed param: phmm the profile hidden markov model against which the coi5p class should
#' be framed. By defualt the function will use the nt_PHMM variable
#' stored in the coi5p package, which was trained on a representitive sample of the
#' barcode of life database (). A user may wish to use a custom derived PHMM, in which
#' case they should consult the aphid package () for custom PHMM derivation.
#'
"nt_PHMM"
use_data(nt_PHMM , aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
dat = coi5p(example_nt_string )
example_nt_string
dat = frame(dat)
dat
devtools::document()
use_data(nt_PHMM , aa_PHMM, trans_df, example_nt_string, overwrite = TRUE, internal = TRUE)
example_nt_string
trans_df
aa_PHMM
nt_PHMM
library(ape)
library(aphid)
library(seqinr)
source('R/deploy_PHMMs.r')
source('R/translation.r')
load('R/sysdata.rda')
library(coi5p)
?coi5p
library(coi5p)
?coi5p
dat = coi5p(example_nt_string)
dat = frame(dat)
dat = translate(dat)
dat = indel_check(dat)
dat
dat
indel_check
?indel_check
dat = indel_check(dat, indel_threshold = -400)
dat
trans_df
trans_df[600,]
trans_df[800,]
trans_df[900,]
tail(trans_df)
unique(trans_df$level)
trans_df$level[trans_df$level == order,]
trans_df$level[trans_df$level == "order",]
trans_df[trans_df$level == "order",]
unique(trans_df$level)
trans_df[trans_df$level == "class",]
censored_translation
?translate_codon
devtools::document()
dat = coi5p(sequence )
sequence = 'actttatatctaatttttggggcatgatcagcgatagttggaacagccttnnnnnnnnnnattcgagcagaactaggtcaacctggaagtttaattggagacgaccagatttataatgtgattgttactgcccacgcttttattataattttttttatggttatgcctattataattgggggattcggaaattgacttctacccttaatactaggagctccagatatagcttttccacgtctcaataatataagattttggttattaccccctgccttaatgttattaattagaggatccctagtagaagccggggcgggaactggatggacagtatacccacctctagccagcaatatcgcacnnnnnnnnnnctctgtagacctctctattttttcattacacttagcgggagcttcctctcttttaggagctatcaacttcatatccacagtaattaatatacgagctgaaactttaacattcgaccgtttacctttatttgtatgtagagtatttgtgacggtgattcttctattattatctttacctgtgttagccggagccattactatgcttttaactgaccggaatcttaatacnnnnnttttcgaccctacagggggaggagaccctattttataccaacactta'
dat = coi5p(sequence )
dat
dat = frame(dat)
dat = translate(dat)
dat
dat
dat = coi5p(sequence )
dat = frame(dat)
dat
x = 'actttatatctaatttttggggcatgatcagcgatagttggaacagccttnnnnnnnnnnattcgagcagaactaggtcaacctggaagtttaattggagacgaccagatttataatgtgattgttactgcccacgcttttattataattttttttatggttatgcctattataattgggggattcggaaattgacttctacccttaatactaggagctccagatatagcttttccacgtctcaataatataagattttggttattaccccctgccttaatgttattaattagaggatccctagtagaagccggggcgggaactggatggacagtatacccacctctagccagcaatatcgcacnnnnnnnnnnctctgtagacctctctattttttcattacacttagcgggagcttcctctcttttaggagctatcaacttcatatccacagtaattaatatacgagctgaaactttaacattcgaccgtttacctttatttgtatgtagagtatttgtgacggtgattcttctattattatctttacctgtgttagccggagccattactatgcttttaactgaccggaatcttaatacnnnnnttttcgaccctacagggggaggagaccctattttataccaacactta'
dna_str = x
num_bp = nchar(dna_str)
num_bp
num_bp
codons = seq(reading_frame, num_bp, by=3)
reading_frame = 1
codons = seq(reading_frame, num_bp, by=3)
codons
codon_vec = sapply(codons, function(x) {
substr(dna_str, x, x+2)
})
codon_vec
aa_str = paste(lapply(codon_vec, translate_codon), collapse= "")
aa_str
sequence = 'actttatatctaatttttggggcatgatcagcgatagttggaacagccttnnnnnnnnnnattcgagcagaactaggtcaacctggaagtttaattggagacgaccagatttataatgtgattgttactgcccacgcttttattataattttttttatggttatgcctattataattgggggattcggaaattgacttctacccttaatactaggagctccagatatagcttttccacgtctcaataatataagattttggttattaccccctgccttaatgttattaattagaggatccctagtagaagccggggcgggaactggatggacagtatacccacctctagccagcaatatcgcacnnnnnnnnnnctctgtagacctctctattttttcattacacttagcgggagcttcctctcttttaggagctatcaacttcatatccacagtaattaatatacgagctgaaactttaacattcgaccgtttacctttatttgtatgtagagtatttgtgacggtgattcttctattattatctttacctgtgttagccggagccattactatgcttttaactgaccggaatcttaatacnnnnnttttcgaccctacagggggaggagaccctattttataccaacactta'
sequence_framed = 'actttatatctaatttttggggcatgatcagcgatagttggaacagccttnnnnnnnnnnattcgagcagaactaggtcaacctggaagtttaattggagacgaccagatttataatgtgattgttactgcccacgcttttattataattttttttatggttatgcctattataattgggggattcggaaattgacttctacccttaatactaggagctccagatatagcttttccacgtctcaataatataagattttggttattaccccctgccttaatgttattaattagaggatccctagtagaagccggggcgggaactggatggacagtatacccacctctagccagcaatatcgcacnnnnnnnnnnctctgtagacctctctattttttcattacacttagcgggagcttcctctcttttaggagctatcaacttcatatccacagtaattaatatacgagctgaaactttaacattcgaccgtttacctttatttgtatgtagagtatttgtgacggtgattcttctattattatctttacctgtgttagccggagccattactatgcttttaactgaccggaatcttaatacnnnnnttttcgaccctacagggggaggagaccctattttataccaacactta'
sequence_AAcensored = "TLYLIFGAWSA?VGTA----IRAELGQPGSLIGDDQIYNVIVTAHAFI?IFFMVMPI?IGGFGNWLLPL?LGAPD?AFPRLNN??FWLLPPALMLLI?GSLVEAGAGTGWTVYPPLASNIA----SVDLSIFSLHLAGASSLLGAINF?STVIN?RAETLTFDRLPLFVC?VFVTVILLLLSLPVLAGAITMLLTDRNLN---FDPTGGGDPILYQHL"
sequence_AA5 = "TLYLIFGAWSAMVGTA----IRAELGQPGSLIGDDQIYNVIVTAHAFIMIFFMVMPIMIGGFGNWLLPLMLGAPDMAFPRLNNMSFWLLPPALMLLISGSLVEAGAGTGWTVYPPLASNIA----SVDLSIFSLHLAGASSLLGAINFMSTVINMRAETLTFDRLPLFVCSVFVTVILLLLSLPVLAGAITMLLTDRNLNT--FDPTGGGDPILYQHL"
dat = coi5p(sequence )
dat = frame(dat)
dat
dat = indel_check(dat)
dat = translate(dat)
dat
dat
dat = translate(dat)
translate
aa_str
#' @param dna_str The DNA string to be translated.
#' @param reading_frame reading frame = 1 means the first bp in the string is the start of the
#' first codon, can pass 1, 2 or 3. For 2 and 3 the first 1 and 2 bp will be
#' dropped from translation respectively.
#' @details
#' Censored translation table:
#'            FFLLSSSSYY?*CCWWLLLLPPPPHHQQRRRRII?MTTTTNN?KSS??VVVVAAAADDEEGGGG
#'   Base1  = TTTTTTTTTTTTTTTTCCCCCCCCCCCCCCCCAAAAAAAAAAAAAAAAGGGGGGGGGGGGGGGG
#'   Base2  = TTTTCCCCAAAAGGGGTTTTCCCCAAAAGGGGTTTTCCCCAAAAGGGGTTTTCCCCAAAAGGGG
#'   Base3  = TCAGTCAGTCAGTCAGTCAGTCAGTCAGTCAGTCAGTCAGTCAGTCAGTCAGTCAGTCAGTCAG
censored_translation = function(dna_str, reading_frame = 1){
num_bp = nchar(dna_str)
codons = seq(reading_frame, num_bp, by=3)
codon_vec = sapply(codons, function(x) {
substr(dna_str, x, x+2)
})
aa_str = paste(lapply(codon_vec, translate_codon), collapse= "")
return(aa_str)
}
sequence = 'actttatatctaatttttggggcatgatcagcgatagttggaacagccttnnnnnnnnnnattcgagcagaactaggtcaacctggaagtttaattggagacgaccagatttataatgtgattgttactgcccacgcttttattataattttttttatggttatgcctattataattgggggattcggaaattgacttctacccttaatactaggagctccagatatagcttttccacgtctcaataatataagattttggttattaccccctgccttaatgttattaattagaggatccctagtagaagccggggcgggaactggatggacagtatacccacctctagccagcaatatcgcacnnnnnnnnnnctctgtagacctctctattttttcattacacttagcgggagcttcctctcttttaggagctatcaacttcatatccacagtaattaatatacgagctgaaactttaacattcgaccgtttacctttatttgtatgtagagtatttgtgacggtgattcttctattattatctttacctgtgttagccggagccattactatgcttttaactgaccggaatcttaatacnnnnnttttcgaccctacagggggaggagaccctattttataccaacactta'
sequence_framed = 'actttatatctaatttttggggcatgatcagcgatagttggaacagccttnnnnnnnnnnattcgagcagaactaggtcaacctggaagtttaattggagacgaccagatttataatgtgattgttactgcccacgcttttattataattttttttatggttatgcctattataattgggggattcggaaattgacttctacccttaatactaggagctccagatatagcttttccacgtctcaataatataagattttggttattaccccctgccttaatgttattaattagaggatccctagtagaagccggggcgggaactggatggacagtatacccacctctagccagcaatatcgcacnnnnnnnnnnctctgtagacctctctattttttcattacacttagcgggagcttcctctcttttaggagctatcaacttcatatccacagtaattaatatacgagctgaaactttaacattcgaccgtttacctttatttgtatgtagagtatttgtgacggtgattcttctattattatctttacctgtgttagccggagccattactatgcttttaactgaccggaatcttaatacnnnnnttttcgaccctacagggggaggagaccctattttataccaacactta'
sequence_AAcensored = "TLYLIFGAWSA?VGTA----IRAELGQPGSLIGDDQIYNVIVTAHAFI?IFFMVMPI?IGGFGNWLLPL?LGAPD?AFPRLNN??FWLLPPALMLLI?GSLVEAGAGTGWTVYPPLASNIA----SVDLSIFSLHLAGASSLLGAINF?STVIN?RAETLTFDRLPLFVC?VFVTVILLLLSLPVLAGAITMLLTDRNLN---FDPTGGGDPILYQHL"
sequence_AA5 = "TLYLIFGAWSAMVGTA----IRAELGQPGSLIGDDQIYNVIVTAHAFIMIFFMVMPIMIGGFGNWLLPLMLGAPDMAFPRLNNMSFWLLPPALMLLISGSLVEAGAGTGWTVYPPLASNIA----SVDLSIFSLHLAGASSLLGAINFMSTVINMRAETLTFDRLPLFVCSVFVTVILLLLSLPVLAGAITMLLTDRNLNT--FDPTGGGDPILYQHL"
dat = coi5p(sequence )
dat
dat$raw
dat = frame(dat)
dat$framed
dat = translate(dat)
dat$aaSeq
devtools::document()
devtools::document()
