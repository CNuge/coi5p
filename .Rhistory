nseq = x$nseq,
weights = x$weights,
reference = x$reference,
mask = new_mask
), class =  "PHMM")
return(newPHMM)
}
# Subsetting a PHMM
#x22.PHMM is a subsection of x.PHMM that should be 22 profile positions in length
nt_22PHMM = subsetPHMM(nt_coi_PHMM, 17, 38)
expect_equal(nt_22PHMM$size, 22)
nt_22PHMM$size
nt_22PHMM$E[,1]
nt_coi_PHMM$E[,17]
nt_22PHMM$A[,ncol(nt_22PHMM$A)]
nt_coi_PHMM$A[,38]
devtools::document()
devtools::document()
devtools::document()
devtools::document()
x = 'AAAA-TTT'
x = 'AAAA-TTTn'
grepl(x, "-")
grepl("-", x)
grepl("n", x)
devtools::document()
devtools::document()
coil::aa_coi_PHMM
coil::nt_coi_PHMM
devtools::document()
?coi5p_pipe
17/3
18/3
333/3
421/3
422/3
420/3
420-333
# Subsetting a PHMM
#x22.PHMM is a subsection of x.PHMM that should be 22 profile positions in length
nt_87PHMM = subsetPHMM(nt_coi_PHMM, 333, 420)
nt_87PHMM
nt_333PHMM = subsetPHMM(nt_coi_PHMM,nt_start , nt_end)
# Subsetting a PHMM
#x22.PHMM is a subsection of x.PHMM that should be 22 profile positions in length
nt_start = 333
nt_end = 420
nt_333PHMM = subsetPHMM(nt_coi_PHMM,nt_start , nt_end)
nt_333PHM
nt_333PHMM = subsetPHMM(nt_coi_PHMM,nt_start , nt_end)
nt_333PHMM$size
87/3
88/3
# Subsetting a PHMM
#x22.PHMM is a subsection of x.PHMM that should be 22 profile positions in length
nt_start = 333
nt_end = 421
nt_333PHMM = subsetPHMM(nt_coi_PHMM, nt_start , nt_end)
nt_333PHMM$size
89/3
# Subsetting a PHMM
#x22.PHMM is a subsection of x.PHMM that should be 22 profile positions in length
nt_start = 333
nt_end = 419
nt_333PHMM = subsetPHMM(nt_coi_PHMM, nt_start , nt_end)
nt_333PHMM$size
419-332
419/3
aa_end = nt_start + (nt_end/3)
aa_start = 111
aa_end = nt_start + (nt_end/3)
aa_end
aa_start
aa_start = 111
aa_end = (nt_start/1) + (nt_end/3)
aa_end
aa_end = (nt_start/1) + (nt_end/3)
aa_end
aa_end = (nt_start/3) + (nt_end/3)
aa_end
aa_end = (nt_end/3)
aa_end
# Subsetting a PHMM
#x22.PHMM is a subsection of x.PHMM that should be 22 profile positions in length
nt_start = 333
nt_start
nt_end = 419
nt_end
nt_333PHMM = subsetPHMM(nt_coi_PHMM, nt_start , nt_end)
nt_333PHMM
x = 1
for (i in 333:419){}
for (i in 333:419){}
for (i in 333:419){
x = x+1
print(x)
}
x = subsetPHMM(nt_coi_PHMM, 2, 3)
x$size
x = subsetPHMM(nt_coi_PHMM, 2, 4)
x$size
333 + (20*3)
# Subsetting a PHMM
#x22.PHMM is a subsection of x.PHMM that should be 22 profile positions in length
nt_start = 333
nt_end = 493
nt_333PHMM = subsetPHMM(nt_coi_PHMM, nt_start , nt_end)
nt_333PHMM$size
nt_333PHMM = subsetPHMM(nt_coi_PHMM, nt_start , nt_end)
# Subsetting a PHMM
#x22.PHMM is a subsection of x.PHMM that should be 22 profile positions in length
nt_start = 333
nt_end = 393
nt_333PHMM$size
nt_333PHMM = subsetPHMM(nt_coi_PHMM, nt_start , nt_end)
nt_333PHMM$size
393-333
nt_start = 10
nt_end = 20
nt_333PHMM = subsetPHMM(nt_coi_PHMM, nt_start , nt_end)
nt_333PHMM$size
# Subsetting a PHMM
#x22.PHMM is a subsection of x.PHMM that should be 22 profile positions in length
nt_start = 333
nt_end = 393
nt_333PHMM = subsetPHMM(nt_coi_PHMM, nt_start , nt_end)
nt_333PHMM$size
61/3
# Subsetting a PHMM
#x22.PHMM is a subsection of x.PHMM that should be 22 profile positions in length
nt_start = 333
nt_end = 392
nt_333PHMM = subsetPHMM(nt_coi_PHMM, nt_start , nt_end)
nt_333PHMM$size
aa_start = nt_start/3
aa_start
aa_end = nt_start + (nt_333PHMM$size/3)
aa_end
aa_end = aa_start + (nt_333PHMM$size/3)
aa_end
aa_start
131-111
aa_start = nt_start/3
aa_end = aa_start + (nt_333PHMM$size/3)
aa_333PHMM = subsetPHMM(aa_coi_PHMM, aa_start , aa_end)
aa_333PHMM$size
aa_start
aa_end
aa_333PHMM = subsetPHMM(aa_coi_PHMM, aa_start , aa_end)
aa_333PHMM$size
aa_end = aa_start + (nt_333PHMM$size/3) -1
aa_end
aa_333PHMM = subsetPHMM(aa_coi_PHMM, aa_start , aa_end)
aa_333PHMM$size
?coi5p_pipe
example_nt_string
coi5p_pipe(example_nt_string)
coi5p_pipe(start_333 , nt_PHMM = nt_333PHMM, aa_PHMM = aa_333PHMM)
start_333 = 'tgtatatcctcctttagcaggtaatttagcacatgctggcccctctgttgatttagcca'
coi5p_pipe(start_333 , nt_PHMM = nt_333PHMM, aa_PHMM = aa_333PHMM)
coi5p_pipe(start_333_error , nt_PHMM = nt_333PHMM, aa_PHMM = aa_333PHMM)
start_333_error = 'tgtatatcctcctttagccaggtaatttagcacatgctggcccctctgttgatttagcca'
coi5p_pipe(start_333_error , nt_PHMM = nt_333PHMM, aa_PHMM = aa_333PHMM)
small_good = coi5p_pipe(start_333 , nt_PHMM = nt_333PHMM, aa_PHMM = aa_333PHMM)
small_error = coi5p_pipe(start_333_error , nt_PHMM = nt_333PHMM, aa_PHMM = aa_333PHMM)
small_error$indel_likely == TRUE
small_error$stop_codons == TRUE
small_good = coi5p_pipe(start_333 , nt_PHMM = nt_333PHMM, aa_PHMM = aa_333PHMM)
small_good$stop_codons
split(example_nt_string, "")
strsplit(example_nt_string, "")[[1]]
dna_333_subset = strsplit(example_nt_string, "")[[1]][[333:634]]
dna_333_subset = strsplit(example_nt_string, "")[[1]]
dna_333_subset
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[[333:634]]
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[333:634]
dna_333_subset
dna_vector[378:634]
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[333:634]
dna_333_subset_indel = dna_vector[333:378] + dna_vector[378:634]
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[333:634]
dna_333_subset_indel = c(dna_vector[333:378] , dna_vector[378:634])
length(dna_333_subset_indel)
length(dna_333_subset)
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[333:634]
dna_333_subset_indel = c(dna_vector[333:378] , dna_vector[379:634])
dna_333_subset
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[333:634]
dna_333_subset_indel = c(dna_vector[333:378] , dna_vector[379:634])
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[333:634]
dna_333_subset_indel = c(dna_vector[333:378] , dna_vector[379:634])
length(dna_333_subset_indel)
```
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[333:634]
dna_333_subset_indel = c(dna_vector[333:378] , dna_vector[379:634])
length(dna_333_subset_indel)
```
dna_333_subset_indel = c(dna_vector[333:378] , dna_vector[379:634])
length(dna_333_subset_indel)
length(dna_333_subset)
302/3
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[333:635]
dna_333_subset_indel = c(dna_vector[333:378] , dna_vector[379:634])
length(dna_333_subset)
length(dna_333_subset_indel)
dna_333_subset
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[333:635]
dna_333_subset_indel = c(dna_vector[333:378] , dna_vector[379:635])
length(dna_333_subset)
length(dna_333_subset_indel)
```
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = dna_vector[333:635]
#insert a T into the sequence, simulating an indel error
dna_333_subset_indel = c(dna_vector[333:378] , "T" ,dna_vector[379:635])
length(dna_333_subset)
length(dna_333_subset_indel)
dna_333_subset = paste(dna_vector[333:635], collapse=")
dna_333_subset
dna_333_subset = paste(dna_vector[333:635], collapse="")
""
dna_333_subset = paste(dna_vector[333:635], collapse="")
nchar(dna_333_subset)
#insert a T into the sequence, simulating an indel error
dna_333_subset_indel = c(dna_vector[333:378] , "T" ,dna_vector[379:635])
dna_333_subset_indel = paste(c(dna_vector[333:378] , "T" ,dna_vector[379:635]), collapse="")
nchar(dna_333_subset_indel)
coit5p_pipe(dna_333_subset)
coi5p_pipe(dna_333_subset)
false_pos = coi5p_pipe(dna_333_subset)
false_pos$stop_codons
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = 333, end = 635)
meta_nt_phmm$size
635/3
nt_start = 333
nt_end = 635
aa_start = nt_start/3
aa_start
nt_end
nt_end-nt_start
(nt_end-nt_start)/3
1+nt_end-nt_start
((1+nt_end-nt_start)/3)
aa_start
aa_end = aa_start + ((1+nt_end-nt_start)/3)
aa_end
nt_end
nt_end/3
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_nt_phmm$size
nt_end
635-333
302/3
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = paste(dna_vector[333:636], collapse="")
#insert a T into the sequence, simulating an indel error
dna_333_subset_indel = paste(c(dna_vector[333:378] , "T" ,dna_vector[379:636]), collapse="")
false_pos = coi5p_pipe(dna_333_subset)
false_pos$stop_codons
nt_start = 333
nt_end = 636
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_nt_phmm$size
304/3
nt_start = 333
nt_end = 635
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_nt_phmm$size
303
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_333_subset = paste(dna_vector[333:632], collapse="")
dna_333_subset
nchar(dna_333_subset)
nchar(dna_333_subset_indel)
#insert a T into the sequence, simulating an indel error
dna_333_subset_indel = paste(c(dna_vector[333:378] , "T" ,dna_vector[379:632]), collapse="")
nchar(dna_333_subset_indel)
false_pos = coi5p_pipe(dna_333_subset)
false_pos$stop_codons
nt_start = 333
nt_end = 632
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_nt_phmm$size
aa_start = nt_start/3
aa_start$size
aa_start
nt_end-nt_start
1+nt_end-nt_start)
aa_end = aa_start + ((1+nt_end-nt_start)/3)
aa_end
aa_start = nt_start/3
aa_end = aa_start + ((1+nt_end-nt_start)/3)
aa_end
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_aa_phmm = subsetPHMM(nt_coi_PHMM, start = aa_start, end = aa_end)
meta_nt_phmm$size
meta_aa_phmm$size
aa_end = aa_start + ((nt_end-nt_start)/3)
aa_end
aa_start = nt_start/3
aa_end = aa_start + ((nt_end-nt_start)/3)
aa_end
nt_end
nt_start
nt_end
nt_end)/3
nt_end/3
aa_end = aa_start + ((nt_end+1)/3)
aa_end
aa_end = ((nt_end+1)/3)
aa_end
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_aa_phmm = subsetPHMM(nt_coi_PHMM, start = aa_start, end = aa_end)
meta_aa_phmm$size
aa_end = ((nt_end)/3)
aa_end
aa_end = nt_end/3)
aa_end = nt_end/3)
aa_end = nt_end/3
aa_end
meta_aa_phmm = subsetPHMM(nt_coi_PHMM, start = aa_start, end = aa_end)
meta_aa_phmm$size
nt_end/3
nt_end
nt_end
nt_end/3
floor(nt_end/3)
aa_end = floor(nt_end/3)
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_aa_phmm = subsetPHMM(nt_coi_PHMM, start = aa_start, end = aa_end)
meta_aa_phmm$size
meta_aa_phmm
dna_333_subset
?coi5p_pipe
subset_no_error_outpt = coi5p_pipe(dna_333_subset, nt_PHMM = meta_nt_phmm, aa_PHMM = meta_aa_phmm)
nt_start = 333
nt_end = 632
aa_start = nt_start/3
aa_end = floor(nt_end/3)
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_aa_phmm = subsetPHMM(aa_coi_PHMM, start = aa_start, end = aa_end)
meta_aa_phmm
subset_no_error_outpt = coi5p_pipe(dna_333_subset, nt_PHMM = meta_nt_phmm, aa_PHMM = meta_aa_phmm)
subset_no_error_outpt$stop_codons
subset_no_error_outpt = coi5p_pipe(dna_333_subset, nt_PHMM = meta_nt_phmm, aa_PHMM = meta_aa_phmm)
subset_no_error_outpt$stop_codons
subset_no_error_outpt
subset_no_error_outpt$raw
nchar(subset_no_error_outpt$raw)
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_vector = c("-", "-", "-", dna_vector)
dna_vector
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_vector = c("-", "-", "-", dna_vector)
dna_333_subset = paste(dna_vector[333:632], collapse="")
#insert a T into the sequence, simulating an indel error
dna_333_subset_indel = paste(c(dna_vector[333:378] , "T" ,dna_vector[379:632]), collapse="")
false_pos = coi5p_pipe(dna_333_subset)
false_pos$stop_codons
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_vector = c("-", "-", "-", dna_vector)
dna_333_subset = paste(dna_vector[333:632], collapse="")
#insert a T into the sequence, simulating an indel error
dna_333_subset_indel = paste(c(dna_vector[333:378] , "T" ,dna_vector[379:632]), collapse="")
false_pos = coi5p_pipe(dna_333_subset)
false_pos$stop_codons
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_vector = c("-", "-", "-", dna_vector)
dna_333_subset = paste(dna_vector[330:629], collapse="")
#insert a T into the sequence, simulating an indel error
dna_333_subset_indel = paste(c(dna_vector[330:378] , "T" ,dna_vector[379:629]), collapse="")
false_pos = coi5p_pipe(dna_333_subset)
false_pos$stop_codons
dna_333_subset
nchar(dna_333_subset)
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_vector = c("-", "-", "-", dna_vector)
dna_333_subset = paste(dna_vector[330:629], collapse="")
dna_333_subset
false_pos = coi5p_pipe(dna_333_subset)
false_pos$stop_codons
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_vector = c("-", "-", "-", dna_vector)
dna_336_subset = paste(dna_vector[336:635], collapse="")
nchar(dna_336_subset)
dna_336_subset_indel = paste(c(dna_vector[336:378] , "T" ,dna_vector[379:635]), collapse="")
dna_336_subset_indel
nchar(dna_336_subset_indel)
false_pos = coi5p_pipe(dna_336_subset)
false_pos$stop_codons
nt_start = 333
nt_end = 632
nt_start = 336
nt_end = 635
aa_start = nt_start/3
aa_end = floor(nt_end/3)
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_aa_phmm = subsetPHMM(aa_coi_PHMM, start = aa_start, end = aa_end)
meta_aa_phmm
subset_no_error_outpt = coi5p_pipe(dna_333_subset, nt_PHMM = meta_nt_phmm, aa_PHMM = meta_aa_phmm)
subset_no_error_outpt$stop_codons
subset_no_error_outpt
subset_no_error_output = coi5p_pipe(dna_336_subset, nt_PHMM = meta_nt_phmm, aa_PHMM = meta_aa_phmm)
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_vector = c("-", "-", "-", dna_vector)
dna_336_subset = paste(dna_vector[336:635], collapse="")
#insert a T into the sequence, simulating an indel error
dna_336_subset_indel = paste(c(dna_vector[336:378] , "T" ,dna_vector[379:635]), collapse="")
false_pos = coi5p_pipe(dna_336_subset)
false_pos$stop_codons
nt_start = 336
nt_end = 635
aa_start = nt_start/3
aa_end = floor(nt_end/3)
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_aa_phmm = subsetPHMM(aa_coi_PHMM, start = aa_start, end = aa_end)
meta_aa_phmm
subset_no_error_output = coi5p_pipe(dna_336_subset, nt_PHMM = meta_nt_phmm, aa_PHMM = meta_aa_phmm)
subset_no_error_output$stop_codons
subset_no_error_output
dna_336_subset
subset_no_error_output$raw
subset_no_error_output$framed
subset_no_error_output
false_pos
subset_has_error_outpt = coi5p_pipe(dna_336_subset_indel, nt_PHMM = meta_nt_phmm, aa_PHMM = meta_aa_phmm)
subset_has_error_outpt$stop_codons
subset_has_error_outpt
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_vector = c("-", "-", "-", dna_vector) #three dashes added to the sequence because the example_nt_string starts at codon 2
dna_336_subset
nchar(dna_336_subset)
false_pos = coi5p_pipe(dna_336_subset)
false_pos$stop_codons
false_pos$data$ntPath
19+261
nt_start/3
subset_no_error_output$framed
nchar(subset_no_error_output$framed)
subset_no_error_output$framed
subset_no_error_output$raw
subset_no_error_output$data$ntPath
subset_no_error_output$aaSeq
x = coi5p_pipe(example_nt_string)
x$aaSeq
aa_start
dna_vector = strsplit(example_nt_string, "")[[1]]
dna_vector = c("-", "-", "-", dna_vector) #three dashes added to the sequence because the example_nt_string starts at codon 2
dna_336_subset = paste(dna_vector[336:635], collapse="")
#insert a T into the sequence, simulating an indel error
dna_336_subset_indel = paste(c(dna_vector[336:378] , "T" ,dna_vector[379:635]), collapse="")
false_pos = coi5p_pipe(dna_336_subset)
false_pos$stop_codons
#want to start at position 336 and cover 300bp
nt_start = 337
nt_end = 636
#since three base pairs go into a
aa_start = nt_start/3
aa_end = floor(nt_end/3)
meta_nt_phmm = subsetPHMM(nt_coi_PHMM, start = nt_start, end = nt_end)
meta_aa_phmm = subsetPHMM(aa_coi_PHMM, start = aa_start, end = aa_end)
meta_aa_phmm
subset_no_error_output = coi5p_pipe(dna_336_subset, nt_PHMM = meta_nt_phmm, aa_PHMM = meta_aa_phmm)
subset_no_error_output$stop_codons
subset_no_error_output
subset_no_error_output$aaSeq
#want to start at position 336 and cover 300bp
nt_start = 337
nt_start
#since three base pairs go into a
aa_start = nt_start/3
#since three base pairs go into a
aa_start = nt_start/3
aa_start
ceiling(nt_start/3)
nt_end/3
(nt_start-1)%3 == 0
((nt_start-1)%3)
((nt_start-1)//3)
(nt_start-1)%3
(nt_start-1)
(nt_start-1)%3
(nt_start-1)%%3
nt_end/3
337/3
x = 338
(x-1)%%3
bad_start = 5
(bad_start-1)%%3
subset_has_error_outpt = coi5p_pipe(dna_336_subset_indel, nt_PHMM = meta_nt_phmm, aa_PHMM = meta_aa_phmm)
subset_has_error_outpt$stop_codons
subset_has_error_outpt
